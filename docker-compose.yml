version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: nscale-assist:latest
    container_name: nscale-assist
    ports:
      - "80:80"
      - "8080:8080"
    environment:
      # Database
      - DATABASE_URL=${DATABASE_URL:-sqlite:///app/data/nscale.db}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      
      # Security
      - SECRET_KEY=${SECRET_KEY:-change-me-in-production}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-change-me-in-production}
      
      # API Configuration
      - API_BASE_URL=${API_BASE_URL:-http://localhost:8080}
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL:-http://ollama:11434}
      
      # Feature flags
      - ENABLE_TELEMETRY=${ENABLE_TELEMETRY:-false}
      - ENABLE_DEBUG=${ENABLE_DEBUG:-false}
      
      # Performance
      - MAX_WORKERS=${MAX_WORKERS:-4}
      - MAX_REQUESTS_PER_WORKER=${MAX_REQUESTS_PER_WORKER:-1000}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - nscale-network

  redis:
    image: redis:7-alpine
    container_name: nscale-redis
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - nscale-network

  postgres:
    image: postgres:15-alpine
    container_name: nscale-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-nscale}
      - POSTGRES_USER=${POSTGRES_USER:-nscale}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-change-me-in-production}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-nscale}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - nscale-network

  ollama:
    image: ollama/ollama:latest
    container_name: nscale-ollama
    volumes:
      - ollama-data:/root/.ollama
    ports:
      - "11434:11434"
    restart: unless-stopped
    networks:
      - nscale-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

volumes:
  redis-data:
  postgres-data:
  ollama-data:

networks:
  nscale-network:
    driver: bridge