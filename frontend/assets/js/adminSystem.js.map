{"version":3,"file":"adminSystem.js","sources":["../../../src/standalone/admin-system.js"],"sourcesContent":["/**\n * admin-system.js\n * Standalone Vue-Modul für System-Monitoring im Admin-Bereich\n */\n\nimport { createApp } from 'vue';\nimport { createPinia } from 'pinia';\nimport SystemView from '../views/admin/SystemView.vue';\nimport { useSystemStore } from '../stores/systemStore';\n\n// Warte auf DOM-Bereitschaft\ndocument.addEventListener('DOMContentLoaded', () => {\n  initAdminSystem();\n});\n\n/**\n * Initialisiert die System-Monitoring-Ansicht\n */\nfunction initAdminSystem() {\n  console.log('Initialisiere Vue.js System-Monitoring...');\n\n  // Mount-Point für das System-Monitoring finden\n  const systemAppContainer = document.getElementById('system-admin-app');\n  if (!systemAppContainer) {\n    console.error('Mount-Point #system-admin-app wurde nicht gefunden');\n    return;\n  }\n\n  // Erstelle Vue-App\n  createVueApp(systemAppContainer);\n}\n\n/**\n * Findet den Mount-Point für die Vue-Komponente\n */\nfunction findMountPoint() {\n  // Zunächst nach dem Tab-spezifischen Container suchen\n  let container = document.querySelector('[data-tab=\"system\"]');\n  \n  // Fallback auf andere mögliche Selektoren\n  if (!container) {\n    container = document.querySelector('.admin-content-system');\n  }\n  \n  if (!container) {\n    // Suche jeden Container, der aktiv ist und \"System\" enthält\n    const tabs = document.querySelectorAll('.admin-content-tab');\n    for (const tab of tabs) {\n      if (tab.style.display !== 'none' && \n          (tab.textContent.includes('System') || \n           tab.getAttribute('data-tab') === 'system')) {\n        container = tab;\n        break;\n      }\n    }\n  }\n\n  return container;\n}\n\n/**\n * Erstellt und konfiguriert die Vue-App\n */\nfunction createVueApp(container) {\n  // Erstelle Pinia-Store und Vue-App\n  const pinia = createPinia();\n  const app = createApp(SystemView);\n\n  // Plugins einbinden\n  app.use(pinia);\n\n  // App mounten\n  app.mount(container);\n\n  // Store initialisieren und Daten laden\n  const systemStore = useSystemStore();\n  systemStore.fetchSystemData();\n\n  console.log('Vue.js System-Monitoring erfolgreich initialisiert');\n}\n\n// Globales Objekt für externe Zugriffe\nwindow.adminSystemApp = {\n  refresh: () => {\n    const systemStore = useSystemStore();\n    if (systemStore) {\n      systemStore.fetchSystemData();\n    }\n  }\n};"],"names":["initAdminSystem","systemAppContainer","createVueApp","container","pinia","createPinia","app","createApp","SystemView","useSystemStore","systemStore"],"mappings":"wLAWA,SAAS,iBAAiB,mBAAoB,IAAM,CAClDA,GACF,CAAC,EAKD,SAASA,GAAkB,CACzB,QAAQ,IAAI,2CAA2C,EAGvD,MAAMC,EAAqB,SAAS,eAAe,kBAAkB,EACrE,GAAI,CAACA,EAAoB,CACvB,QAAQ,MAAM,oDAAoD,EAClE,MACD,CAGDC,EAAaD,CAAkB,CACjC,CAiCA,SAASC,EAAaC,EAAW,CAE/B,MAAMC,EAAQC,IACRC,EAAMC,EAAUC,CAAU,EAGhCF,EAAI,IAAIF,CAAK,EAGbE,EAAI,MAAMH,CAAS,EAGCM,IACR,gBAAe,EAE3B,QAAQ,IAAI,oDAAoD,CAClE,CAGA,OAAO,eAAiB,CACtB,QAAS,IAAM,CACb,MAAMC,EAAcD,IAChBC,GACFA,EAAY,gBAAe,CAE9B,CACH"}