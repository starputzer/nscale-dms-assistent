{"version":3,"file":"featureToggleStore.07714ad3.js","sources":["../../../src/stores/featureToggleStore.js"],"sourcesContent":["// stores/featureToggleStore.js\nimport { defineStore } from 'pinia';\n\n/**\n * Store zur Verwaltung der Feature-Toggles\n * Ermöglicht den Wechsel zwischen altem und neuem UI sowie das Aktivieren/Deaktivieren bestimmter Features\n */\nexport const useFeatureToggleStore = defineStore('featureToggle', {\n  state: () => ({\n    // Hauptschalter für die UI-Version (true = neue Vue.js-UI, false = alte UI)\n    useNewUI: localStorage.getItem('useNewUI') === 'true' || false,\n    \n    // Einzelne Feature-Toggles für spezifische Komponenten\n    // Diese erlauben eine granularere Steuerung während der Migration\n    features: {\n      // Dokumentenkonverter in Vue.js (erste migrierte Komponente)\n      vueDocConverter: localStorage.getItem('feature_vueDocConverter') === 'true' || true,\n      \n      // Chat-Komponente in Vue.js (implementiert)\n      vueChat: localStorage.getItem('feature_vueChat') === 'true' || false,\n      \n      // Admin-Panel in Vue.js (teilweise implementiert)\n      vueAdmin: localStorage.getItem('feature_vueAdmin') === 'true' || false,\n      \n      // Einstellungskomponente in Vue.js (noch nicht implementiert)\n      vueSettings: localStorage.getItem('feature_vueSettings') === 'true' || false,\n      \n      // Weitere Features...\n    },\n    \n    // Entwicklungsmodus aktivieren (zeigt z.B. den Toggle-Schalter an)\n    devMode: localStorage.getItem('devMode') === 'true' || false\n  }),\n  \n  getters: {\n    /**\n     * Prüft, ob ein bestimmtes Feature aktiviert ist\n     * @param {string} featureName - Name des Features\n     * @returns {boolean} - true, wenn Feature aktiviert ist\n     */\n    isFeatureEnabled: (state) => (featureName) => {\n      // Wenn neue UI global deaktiviert ist, ist kein Vue.js-Feature aktiv\n      if (!state.useNewUI) return false;\n      \n      // Sonst prüfe den spezifischen Feature-Toggle\n      return state.features[featureName] || false;\n    },\n    \n    /**\n     * Liste aller aktivierten Features\n     */\n    activeFeatures: (state) => {\n      if (!state.useNewUI) return [];\n      \n      return Object.entries(state.features)\n        .filter(([_, value]) => value)\n        .map(([key]) => key);\n    }\n  },\n  \n  actions: {\n    /**\n     * Umschalten zwischen alter und neuer UI\n     * @param {boolean} value - Neuer Wert (true = neue UI, false = alte UI)\n     */\n    toggleNewUI(value) {\n      this.useNewUI = value;\n      localStorage.setItem('useNewUI', value.toString());\n      \n      // Wenn wir zur alten UI wechseln, speichere aktuelle Feature-Einstellungen\n      // damit sie beim Zurückwechseln wiederhergestellt werden können\n      if (!value) {\n        localStorage.setItem('featureSettings', JSON.stringify(this.features));\n      } else {\n        // Versuche gespeicherte Einstellungen wiederherzustellen\n        try {\n          const savedSettings = JSON.parse(localStorage.getItem('featureSettings'));\n          if (savedSettings) {\n            this.features = { ...this.features, ...savedSettings };\n          }\n        } catch (e) {\n          console.error('Fehler beim Wiederherstellen der Feature-Einstellungen:', e);\n        }\n      }\n      \n      // Aktualisiere die Seite, um die Änderungen anzuwenden\n      window.location.reload();\n    },\n    \n    /**\n     * Aktiviert oder deaktiviert ein bestimmtes Feature\n     * @param {string} featureName - Name des Features\n     * @param {boolean} value - Neuer Wert (true = aktiviert, false = deaktiviert)\n     */\n    toggleFeature(featureName, value) {\n      if (this.features.hasOwnProperty(featureName)) {\n        this.features[featureName] = value;\n        localStorage.setItem(`feature_${featureName}`, value.toString());\n      }\n    },\n    \n    /**\n     * Entwicklermodus umschalten\n     * @param {boolean} value - Neuer Wert (true = aktiviert, false = deaktiviert)\n     */\n    toggleDevMode(value) {\n      this.devMode = value;\n      localStorage.setItem('devMode', value.toString());\n    },\n    \n    /**\n     * Alle Feature-Toggles aktivieren (für vollständigen Wechsel zu neuer UI)\n     */\n    enableAllFeatures() {\n      Object.keys(this.features).forEach(key => {\n        this.features[key] = true;\n        localStorage.setItem(`feature_${key}`, 'true');\n      });\n    },\n    \n    /**\n     * Alle Feature-Toggles deaktivieren (für vollständigen Wechsel zu alter UI)\n     */\n    disableAllFeatures() {\n      Object.keys(this.features).forEach(key => {\n        this.features[key] = false;\n        localStorage.setItem(`feature_${key}`, 'false');\n      });\n    }\n  }\n});"],"names":["useFeatureToggleStore","defineStore","state","featureName","_","value","key","savedSettings","e"],"mappings":"4DAOY,MAACA,EAAwBC,EAAY,gBAAiB,CAChE,MAAO,KAAO,CAEZ,SAAU,aAAa,QAAQ,UAAU,IAAM,QAAU,GAIzD,SAAU,CAER,gBAAiB,aAAa,QAAQ,yBAAyB,IAAM,QAAU,GAG/E,QAAS,aAAa,QAAQ,iBAAiB,IAAM,QAAU,GAG/D,SAAU,aAAa,QAAQ,kBAAkB,IAAM,QAAU,GAGjE,YAAa,aAAa,QAAQ,qBAAqB,IAAM,QAAU,EAGxE,EAGD,QAAS,aAAa,QAAQ,SAAS,IAAM,QAAU,EAC3D,GAEE,QAAS,CAMP,iBAAmBC,GAAWC,GAEvBD,EAAM,UAGJA,EAAM,SAASC,CAAW,GAAK,GAMxC,eAAiBD,GACVA,EAAM,SAEJ,OAAO,QAAQA,EAAM,QAAQ,EACjC,OAAO,CAAC,CAACE,EAAGC,CAAK,IAAMA,CAAK,EAC5B,IAAI,CAAC,CAACC,CAAG,IAAMA,CAAG,EAJO,EAM/B,EAED,QAAS,CAKP,YAAYD,EAAO,CAMjB,GALA,KAAK,SAAWA,EAChB,aAAa,QAAQ,WAAYA,EAAM,SAAU,CAAA,EAI7C,CAACA,EACH,aAAa,QAAQ,kBAAmB,KAAK,UAAU,KAAK,QAAQ,CAAC,MAGrE,IAAI,CACF,MAAME,EAAgB,KAAK,MAAM,aAAa,QAAQ,iBAAiB,CAAC,EACpEA,IACF,KAAK,SAAW,CAAE,GAAG,KAAK,SAAU,GAAGA,GAE1C,OAAQC,EAAG,CACV,QAAQ,MAAM,0DAA2DA,CAAC,CAC3E,CAIH,OAAO,SAAS,QACjB,EAOD,cAAcL,EAAaE,EAAO,CAC5B,KAAK,SAAS,eAAeF,CAAW,IAC1C,KAAK,SAASA,CAAW,EAAIE,EAC7B,aAAa,QAAQ,WAAWF,CAAW,GAAIE,EAAM,SAAQ,CAAE,EAElE,EAMD,cAAcA,EAAO,CACnB,KAAK,QAAUA,EACf,aAAa,QAAQ,UAAWA,EAAM,SAAU,CAAA,CACjD,EAKD,mBAAoB,CAClB,OAAO,KAAK,KAAK,QAAQ,EAAE,QAAQC,GAAO,CACxC,KAAK,SAASA,CAAG,EAAI,GACrB,aAAa,QAAQ,WAAWA,CAAG,GAAI,MAAM,CACrD,CAAO,CACF,EAKD,oBAAqB,CACnB,OAAO,KAAK,KAAK,QAAQ,EAAE,QAAQA,GAAO,CACxC,KAAK,SAASA,CAAG,EAAI,GACrB,aAAa,QAAQ,WAAWA,CAAG,GAAI,OAAO,CACtD,CAAO,CACF,CACF,CACH,CAAC"}