{"version":3,"file":"doc-converter.9da69ad4.js","sources":["../../../src/standalone/doc-converter.js"],"sourcesContent":["/**\n * Dokument-Konverter (Standalone-Version ohne Abhängigkeiten)\n * Diese Datei stellt eine eigenständige Implementation des Dokumenten-Konverters dar,\n * die ohne Vue.js oder andere externe Abhängigkeiten funktioniert.\n */\n\n(function() {\n    // Konfiguration\n    const DEBUG = true;\n    const AUTO_INIT = true;\n    const AUTO_FIX_VISIBILITY = true;\n    \n    // Logging-Funktionen\n    function log(message, type = 'info') {\n        const prefix = `[DocConverter]`;\n        \n        switch(type) {\n            case 'error': console.error(prefix, message); break;\n            case 'warn': console.warn(prefix, message); break;\n            default: console.log(prefix, message);\n        }\n    }\n    \n    // DOM-Hilfsfunktionen\n    function findOrCreateContainer() {\n        log('Suche nach DocConverter-Container...');\n        \n        // Suche nach bekannten Selektoren\n        const selectors = [\n            '#doc-converter-container',\n            '#doc-converter-app',\n            '.doc-converter',\n            '[data-tab=\"docConverter\"]',\n            '.admin-tab-content[data-tab=\"docConverter\"]',\n            '.tab-content[data-active-tab=\"docConverter\"]'\n        ];\n        \n        let container = null;\n        \n        // Versuche jeden Selektor\n        for (const selector of selectors) {\n            const elements = document.querySelectorAll(selector);\n            if (elements.length > 0) {\n                container = elements[0];\n                log(`Container gefunden mit Selektor: ${selector}`);\n                break;\n            }\n        }\n        \n        // Wenn kein Container gefunden wurde, versuche einen zu erstellen\n        if (!container) {\n            log('Kein Container gefunden, versuche einen zu erstellen', 'warn');\n            \n            // Mögliche Eltern-Container\n            const parentSelectors = [\n                '.admin-content',\n                '.admin-panel-content',\n                '.content-container',\n                'main',\n                '.main-content',\n                'body'\n            ];\n            \n            let parent = null;\n            \n            // Finde ein Elternelement\n            for (const selector of parentSelectors) {\n                const elements = document.querySelectorAll(selector);\n                if (elements.length > 0) {\n                    parent = elements[0];\n                    log(`Elternelement gefunden mit Selektor: ${selector}`);\n                    break;\n                }\n            }\n            \n            // Wenn ein Elternelement gefunden wurde, erstelle den Container\n            if (parent) {\n                container = document.createElement('div');\n                container.id = 'doc-converter-container';\n                container.className = 'doc-converter admin-tab-content';\n                container.setAttribute('data-tab', 'docConverter');\n                \n                // Stelle sicher, dass der Container sichtbar ist\n                container.style.display = 'block';\n                container.style.visibility = 'visible';\n                container.style.opacity = '1';\n                \n                parent.appendChild(container);\n                log('Container erfolgreich erstellt');\n            } else {\n                log('Kein geeignetes Elternelement gefunden', 'error');\n            }\n        }\n        \n        return container;\n    }\n    \n    // Prüfe auf Sichtbarkeitsprobleme und korrigiere diese\n    function fixVisibility(container) {\n        if (!container) return;\n        \n        // Prüfe den berechneten Stil\n        const style = window.getComputedStyle(container);\n        \n        // Prüfe, ob das Element unsichtbar ist\n        if (style.display === 'none' || style.visibility === 'hidden' || style.opacity === '0') {\n            log('Container ist unsichtbar, wende Korrekturen an', 'warn');\n            \n            // Erzwinge Sichtbarkeit mit !important\n            container.style.setProperty('display', 'block', 'important');\n            container.style.setProperty('visibility', 'visible', 'important');\n            container.style.setProperty('opacity', '1', 'important');\n            \n            // Füge Klasse für CSS-Selektoren hinzu\n            container.classList.add('doc-converter-force-visible');\n        }\n    }\n    \n    // Erstelle die UI des Dokumenten-Konverters\n    function createUI(container) {\n        if (!container) return;\n        \n        log('Erstelle DocConverter UI');\n        \n        // UI-HTML\n        container.innerHTML = `\n            <div class=\"doc-converter-view classic-ui\">\n                <header class=\"header\">\n                    <h1 class=\"title\">nscale Dokumenten-Konverter</h1>\n                    <p class=\"subtitle\">Konvertieren Sie Ihre Dokumente zu durchsuchbarem Text für das nscale DMS</p>\n                </header>\n                \n                <main class=\"main-content\">\n                    <div class=\"panel-section\">\n                        <h2 class=\"section-title\">Dokumente hochladen</h2>\n                        \n                        <form action=\"/api/admin/upload/document\" method=\"post\" enctype=\"multipart/form-data\" id=\"converter-form\">\n                            <div style=\"margin-bottom: 1.5rem;\">\n                                <label style=\"display: block; margin-bottom: 0.5rem; font-weight: 500;\">Datei auswählen</label>\n                                <input type=\"file\" name=\"file\" style=\"border: 1px solid #e5e7eb; padding: 0.75rem; width: 100%; border-radius: 0.25rem; background-color: #f9fafb;\" accept=\".pdf,.docx,.doc,.xlsx,.xls,.pptx,.ppt,.html,.txt\">\n                                <p style=\"margin-top: 0.5rem; color: #6b7280; font-size: 0.875rem;\">Unterstützte Formate: PDF, DOCX, XLSX, PPTX, HTML, TXT</p>\n                            </div>\n                            \n                            <div style=\"margin-bottom: 1.5rem;\">\n                                <label style=\"display: block; margin-bottom: 0.75rem; font-weight: 500;\">Konvertierungsoptionen</label>\n                                \n                                <div style=\"display: flex; flex-direction: column; gap: 0.5rem; margin-left: 0.5rem;\">\n                                    <label style=\"display: flex; align-items: center;\">\n                                        <input type=\"checkbox\" name=\"post_processing\" checked style=\"margin-right: 0.5rem;\">\n                                        <span>Nachbearbeitung (verbessert Struktur und Format)</span>\n                                    </label>\n                                    \n                                    <label style=\"display: flex; align-items: center;\">\n                                        <input type=\"checkbox\" name=\"split_sections\" checked style=\"margin-right: 0.5rem;\">\n                                        <span>In Abschnitte aufteilen</span>\n                                    </label>\n                                    \n                                    <label style=\"display: flex; align-items: center;\">\n                                        <input type=\"checkbox\" name=\"extract_images\" checked style=\"margin-right: 0.5rem;\">\n                                        <span>Bilder extrahieren (wenn verfügbar)</span>\n                                    </label>\n                                </div>\n                            </div>\n                            \n                            <div style=\"display: flex; gap: 1rem; margin-top: 2rem;\">\n                                <button type=\"submit\" style=\"background: #3b82f6; color: white; padding: 0.75rem 1.5rem; border: none; border-radius: 0.375rem; cursor: pointer; font-weight: 500;\" id=\"converter-submit\">\n                                    Dokument konvertieren\n                                </button>\n                                \n                                <button type=\"reset\" style=\"background: #e5e7eb; color: #374151; padding: 0.75rem 1.5rem; border: none; border-radius: 0.375rem; cursor: pointer; font-weight: 500;\">\n                                    Zurücksetzen\n                                </button>\n                            </div>\n                        </form>\n                        \n                        <div id=\"conversion-progress\" style=\"display: none; margin-top: 2rem;\">\n                            <h3>Konvertierung läuft...</h3>\n                            <div class=\"progress-bar\" style=\"height: 8px; overflow: hidden; background-color: #e5e7eb; border-radius: 9999px; margin: 1rem 0;\">\n                                <div class=\"progress-bar-inner\" style=\"height: 100%; background-color: #10b981; transition: width 0.3s ease; width: 0%;\"></div>\n                            </div>\n                            <p class=\"progress-text\">0%</p>\n                        </div>\n                        \n                        <div id=\"conversion-results\" style=\"display: none; margin-top: 2rem;\">\n                            <h3>Konvertierung abgeschlossen</h3>\n                            <div class=\"results-container\"></div>\n                        </div>\n                    </div>\n                </main>\n            </div>\n        `;\n        \n        // Fortschrittsbalken-Simulation\n        const form = container.querySelector('#converter-form');\n        const progressContainer = container.querySelector('#conversion-progress');\n        const progressBar = container.querySelector('.progress-bar-inner');\n        const progressText = container.querySelector('.progress-text');\n        const resultsContainer = container.querySelector('#conversion-results');\n        \n        if (form) {\n            form.addEventListener('submit', function(e) {\n                // Zeige den Fortschrittsbalken\n                if (progressContainer) {\n                    progressContainer.style.display = 'block';\n                }\n                \n                // Simuliere Fortschritt (in einer echten Anwendung würde hier AJAX verwendet)\n                let progress = 0;\n                const interval = setInterval(function() {\n                    progress += Math.random() * 10;\n                    if (progress > 100) {\n                        progress = 100;\n                        clearInterval(interval);\n                        \n                        // Zeige Ergebnisse nach Abschluss\n                        setTimeout(function() {\n                            if (progressContainer) {\n                                progressContainer.style.display = 'none';\n                            }\n                            if (resultsContainer) {\n                                resultsContainer.style.display = 'block';\n                                resultsContainer.querySelector('.results-container').innerHTML = `\n                                    <div style=\"padding: 1rem; margin-bottom: 1rem; background-color: #f0fdf4; border-left: 4px solid #10b981; border-radius: 0.25rem;\">\n                                        <p style=\"margin-bottom: 0.5rem; font-weight: 500;\">Konvertierung erfolgreich</p>\n                                        <p style=\"margin-bottom: 0;\">Die Datei wurde erfolgreich konvertiert und kann jetzt verwendet werden.</p>\n                                    </div>\n                                    <button style=\"background: #3b82f6; color: white; padding: 0.5rem 1rem; border: none; border-radius: 0.375rem; cursor: pointer; font-weight: 500; margin-top: 1rem;\">\n                                        Ergebnis herunterladen\n                                    </button>\n                                `;\n                            }\n                        }, 500);\n                    }\n                    \n                    if (progressBar) {\n                        progressBar.style.width = progress + '%';\n                    }\n                    if (progressText) {\n                        progressText.textContent = Math.round(progress) + '%';\n                    }\n                }, 200);\n                \n                // In der Beispielimplementierung verhindern wir das tatsächliche Absenden\n                // des Formulars, da dies nur eine UI-Demo ist\n                if (!window.docConverterAllowFormSubmit) {\n                    e.preventDefault();\n                }\n            });\n        }\n    }\n    \n    // Überwache DOM-Änderungen, um den DocConverter-Container zu finden\n    function setupMutationObserver() {\n        // Erstelle einen Observer, der DOM-Änderungen überwacht\n        const observer = new MutationObserver(function(mutations) {\n            // Prüfe, ob der Tab oder Container jetzt vorhanden ist\n            const container = findOrCreateContainer();\n            \n            if (container && !container.hasAttribute('data-doc-converter-initialized')) {\n                log('Container durch DOM-Änderung gefunden, initialisiere UI');\n                \n                // Markiere den Container als initialisiert\n                container.setAttribute('data-doc-converter-initialized', 'true');\n                \n                // Erstelle die UI\n                createUI(container);\n                \n                // Stelle sicher, dass der Container sichtbar ist\n                if (AUTO_FIX_VISIBILITY) {\n                    fixVisibility(container);\n                }\n            }\n        });\n        \n        // Starte die Beobachtung mit den angegebenen Optionen\n        observer.observe(document.body, {\n            childList: true,\n            subtree: true\n        });\n        \n        log('DOM-Beobachtung für DocConverter initialisiert');\n    }\n    \n    // Hauptinitialisierungsfunktion\n    function initialize() {\n        log('Initialisiere DocConverter');\n        \n        // Warte, bis das DOM geladen ist\n        if (document.readyState === 'loading') {\n            document.addEventListener('DOMContentLoaded', function() {\n                log('DOMContentLoaded ausgelöst, suche nach Container');\n                initializeUI();\n            });\n        } else {\n            log('DOM bereits geladen, initialisiere sofort');\n            initializeUI();\n        }\n        \n        // Stelle auch einen MutationObserver bereit, um den Tab zu erkennen, wenn er später hinzugefügt wird\n        setupMutationObserver();\n    }\n    \n    // UI-Initialisierung\n    function initializeUI() {\n        const container = findOrCreateContainer();\n        \n        if (container) {\n            // Vermeidet doppelte Initialisierung\n            if (!container.hasAttribute('data-doc-converter-initialized')) {\n                container.setAttribute('data-doc-converter-initialized', 'true');\n                createUI(container);\n            }\n            \n            // Stelle sicher, dass der Container sichtbar ist\n            if (AUTO_FIX_VISIBILITY) {\n                fixVisibility(container);\n                \n                // Prüfe nochmals nach einer kurzen Verzögerung (für den Fall, dass CSS später geladen wird)\n                setTimeout(function() {\n                    fixVisibility(container);\n                }, 500);\n            }\n        } else {\n            log('Kein Container gefunden, verwende MutationObserver für spätere Erkennung', 'warn');\n        }\n    }\n    \n    // Globale Funktion zur manuellen Initialisierung\n    window.initializeClassicDocConverter = function() {\n        log('Manuelle Initialisierung aufgerufen');\n        initializeUI();\n        return true;\n    };\n    \n    // Setze globale Flags\n    window.docConverterStandalone = true;\n    \n    // Starte die Initialisierung\n    if (AUTO_INIT) {\n        initialize();\n    }\n})();"],"names":["log","message","type","prefix","findOrCreateContainer","selectors","container","selector","elements","parentSelectors","parent","fixVisibility","style","createUI","form","progressContainer","progressBar","progressText","resultsContainer","e","progress","interval","setupMutationObserver","mutations","initialize","initializeUI"],"mappings":"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"}