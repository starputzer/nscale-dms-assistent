import{e as a}from"./_plugin-vue_export-helper.89064427.js";const o=a("featureToggle",{state:()=>({useNewUI:localStorage.getItem("useNewUI")==="true"||!1,features:{vueDocConverter:localStorage.getItem("feature_vueDocConverter")==="true"||!0,vueChat:localStorage.getItem("feature_vueChat")==="true"||!1,vueAdmin:localStorage.getItem("feature_vueAdmin")==="true"||!1,vueSettings:localStorage.getItem("feature_vueSettings")==="true"||!1},devMode:localStorage.getItem("devMode")==="true"||!1}),getters:{isFeatureEnabled:e=>t=>e.useNewUI&&e.features[t]||!1,activeFeatures:e=>e.useNewUI?Object.entries(e.features).filter(([t,r])=>r).map(([t])=>t):[]},actions:{toggleNewUI(e){if(this.useNewUI=e,localStorage.setItem("useNewUI",e.toString()),!e)localStorage.setItem("featureSettings",JSON.stringify(this.features));else try{const t=JSON.parse(localStorage.getItem("featureSettings"));t&&(this.features={...this.features,...t})}catch(t){console.error("Fehler beim Wiederherstellen der Feature-Einstellungen:",t)}window.location.reload()},toggleFeature(e,t){this.features.hasOwnProperty(e)&&(this.features[e]=t,localStorage.setItem(`feature_${e}`,t.toString()))},toggleDevMode(e){this.devMode=e,localStorage.setItem("devMode",e.toString())},enableAllFeatures(){Object.keys(this.features).forEach(e=>{this.features[e]=!0,localStorage.setItem(`feature_${e}`,"true")})},disableAllFeatures(){Object.keys(this.features).forEach(e=>{this.features[e]=!1,localStorage.setItem(`feature_${e}`,"false")})}}});export{o as u};
//# sourceMappingURL=featureToggleStore.07714ad3.js.map
