<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>nscale DMS Assistent</title>
    
    <!-- Basis CSS für initiales Rendering (minimiert) -->
    <link rel="stylesheet" href="/assets/styles/base.css">
    
    <!-- Favicon -->
    <link rel="icon" href="/assets/images/favicon.ico" type="image/x-icon">
    
    <!-- Preload kritische Assets -->
    <link rel="preload" href="/assets/fonts/nscale-icons.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="/assets/images/senmvku-logo.png" as="image">
</head>
<body>
    <!-- App Mount Point -->
    <div id="app"><!-- Vue-App wird hier gemountet --></div>
    
    <!-- Initiales Lade-Feedback -->
    <div id="app-loading" class="app-loader">
        <div class="app-loader-content">
            <img src="/assets/images/senmvku-logo.png" alt="nscale Logo" class="app-loader-logo">
            <div class="app-loader-spinner"></div>
            <p>Anwendung wird geladen...</p>
        </div>
    </div>
    
    <!-- Kritische Inline-Skripte für initiale Konfiguration -->
    <script>
        // Grundlegende Konfiguration und Feature-Detection
        window.APP_CONFIG = {
            apiBaseUrl: '/api',
            buildVersion: '1.2.3',
            buildTimestamp: '20250511',
            environment: 'production'
        };
        
        // Theme-Präferenz aus LocalStorage oder Systemeinstellung laden
        (function() {
            const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
            const savedTheme = localStorage.getItem('theme');
            const theme = savedTheme || (prefersDark ? 'dark' : 'light');
            document.documentElement.classList.add(`theme-${theme}`);
            window.APP_CONFIG.initialTheme = theme;
        })();
        
        // Globaler Fehler-Handler
        window.addEventListener('error', function(event) {
            console.error('Globaler Fehler abgefangen:', event.error);
            const errorElement = document.createElement('div');
            errorElement.className = 'critical-error';
            errorElement.innerHTML = `
                <div class="critical-error-content">
                    <h2>Anwendungsfehler</h2>
                    <p>Es ist ein unerwarteter Fehler aufgetreten. Bitte laden Sie die Seite neu.</p>
                    <button onclick="window.location.reload()">Neu laden</button>
                </div>
            `;
            
            const appLoader = document.getElementById('app-loading');
            if (appLoader) appLoader.style.display = 'none';
            
            document.body.appendChild(errorElement);
        });
    </script>
    
    <!-- Haupt-App-Bundle - dynamisch via Vite erzeugt -->
    <script type="module" src="/src/main.ts"></script>
</body>
</html>