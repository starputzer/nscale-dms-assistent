name: Incremental TypeScript Check

on:
  pull_request:
    types: [opened, synchronize]
    
jobs:
  changed-files:
    name: Get Changed TypeScript Files
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.changes.outputs.files }}
      count: ${{ steps.changes.outputs.count }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Get changed files
      id: changes
      run: |
        # Get list of changed TypeScript files
        CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep -E '\.(ts|tsx|vue)$' | tr '\n' ' ')
        echo "files=$CHANGED_FILES" >> $GITHUB_OUTPUT
        echo "count=$(echo $CHANGED_FILES | wc -w)" >> $GITHUB_OUTPUT
        
  incremental-check:
    name: Check Changed Files
    needs: changed-files
    if: needs.changed-files.outputs.count > 0
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check only changed files
      run: |
        echo "Checking ${{ needs.changed-files.outputs.count }} changed files..."
        npx tsc --noEmit --skipLibCheck ${{ needs.changed-files.outputs.files }} 2>&1 | tee incremental-errors.log || true
        
    - name: Comment PR with results
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const errors = fs.readFileSync('incremental-errors.log', 'utf8');
          const errorCount = (errors.match(/error TS/g) || []).length;
          
          let comment = '## üîç TypeScript Check Results\n\n';
          
          if (errorCount === 0) {
            comment += '‚úÖ **All changed TypeScript files passed type checking!**\n';
          } else {
            comment += `‚ùå **Found ${errorCount} TypeScript errors in changed files**\n\n`;
            comment += '<details>\n<summary>Click to see errors</summary>\n\n';
            comment += '```\n' + errors.substring(0, 10000) + '\n```\n';
            comment += '</details>\n';
          }
          
          // Find existing comment
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          
          const botComment = comments.find(comment => 
            comment.user.type === 'Bot' && 
            comment.body.includes('TypeScript Check Results')
          );
          
          if (botComment) {
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: comment
            });
          } else {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });
          }