name: TypeScript Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  typecheck:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run TypeScript compiler
      run: npm run typecheck
      continue-on-error: true
      
    - name: Generate TypeScript error report
      if: failure()
      run: |
        npm run typecheck 2>&1 | tee typescript-errors.log
        echo "## TypeScript Errors Summary" >> $GITHUB_STEP_SUMMARY
        echo "Total errors: $(grep -c "error TS" typescript-errors.log || echo 0)" >> $GITHUB_STEP_SUMMARY
        echo "\n### Top 10 Error Types:" >> $GITHUB_STEP_SUMMARY
        grep "error TS" typescript-errors.log | sed 's/.*error TS\([0-9]*\):.*/TS\1/' | sort | uniq -c | sort -nr | head -10 >> $GITHUB_STEP_SUMMARY
        
    - name: Upload error report
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: typescript-errors
        path: typescript-errors.log
        
  lint:
    name: ESLint Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint -- --format json --output-file eslint-report.json
      continue-on-error: true
      
    - name: Generate ESLint summary
      if: always()
      run: |
        if [ -f eslint-report.json ]; then
          echo "## ESLint Summary" >> $GITHUB_STEP_SUMMARY
          echo "Total files: $(jq 'length' eslint-report.json)" >> $GITHUB_STEP_SUMMARY
          echo "Files with errors: $(jq '[.[] | select(.errorCount > 0)] | length' eslint-report.json)" >> $GITHUB_STEP_SUMMARY
          echo "Files with warnings: $(jq '[.[] | select(.warningCount > 0)] | length' eslint-report.json)" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: Upload ESLint report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: eslint-report
        path: eslint-report.json
        
  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: [typecheck, lint]
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build:no-check
      
    - name: Check bundle size
      run: |
        echo "## Bundle Size Report" >> $GITHUB_STEP_SUMMARY
        echo "| File | Size | Gzip |" >> $GITHUB_STEP_SUMMARY
        echo "|------|------|------|" >> $GITHUB_STEP_SUMMARY
        find dist/assets -name "*.js" -exec du -h {} \; | sort -hr | head -10 | while read size file; do
          gzipsize=$(gzip -c "$file" | wc -c | numfmt --to=iec)
          echo "| $(basename $file) | $size | $gzipsize |" >> $GITHUB_STEP_SUMMARY
        done
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/