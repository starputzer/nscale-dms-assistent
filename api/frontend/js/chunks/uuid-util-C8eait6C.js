var e,t;function o(e,t){if("useVueComponents"===e||"useVueDocConverter"===e)return localStorage.setItem(e,t.toString()),!0;try{const o=JSON.parse(localStorage.getItem("featureToggles")||"{}");return o[e]=t,localStorage.setItem("featureToggles",JSON.stringify(o)),!0}catch(o){return!1}}function r(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)}))}e="feature-flags",t="initialize",void 0!==window.telemetry&&window.telemetry.trackEvent("legacy_code_usage",{component:e,action:t,timestamp:(new Date).toISOString()}),"undefined"!=typeof window&&(window.featureFlags={enableAllVueFeatures:function(){localStorage.setItem("useVueComponents","true"),localStorage.setItem("useVueDocConverter","true");let e={};try{const t=localStorage.getItem("featureToggles");e=t?JSON.parse(t):{}}catch(t){e={}}return e.useSfcAdmin=!0,e.useSfcDocConverter=!0,e.useSfcChat=!0,e.useSfcSettings=!0,e.usePiniaAuth=!0,e.usePiniaUI=!0,e.usePiniaSessions=!0,e.usePiniaSettings=!0,e.useLegacyBridge=!0,localStorage.setItem("featureToggles",JSON.stringify(e)),{localStorage:{useVueComponents:!0,useVueDocConverter:!0},featureToggles:e}},getFeatureFlagsStatus:function(){const e="true"===localStorage.getItem("useVueComponents"),t="true"===localStorage.getItem("useVueDocConverter");let o={};try{const e=localStorage.getItem("featureToggles");o=e?JSON.parse(e):{}}catch(r){}return{localStorage:{useVueComponents:e,useVueDocConverter:t},featureToggles:o}},setFeature:o,resetAllFeatures:function(){localStorage.removeItem("useVueComponents"),localStorage.removeItem("useVueDocConverter"),localStorage.removeItem("featureToggles")}}),"undefined"!=typeof window&&(window.uuidUtil={v4:r,simple:function(){return`${(new Date).getTime().toString(36)}-${Math.random().toString(36).substring(2,10)}`},isValid:function(e){return/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(e)},fromString:function(e){let t=0;if(0===e.length)return t.toString();for(let r=0;r<e.length;r++)t=(t<<5)-t+e.charCodeAt(r),t|=0;const o=Math.abs(t).toString(16).padStart(8,"0");return`${o.substr(0,8)}-${o.substr(0,4)}-4${o.substr(0,3)}-8${o.substr(0,3)}-${"0".repeat(12)}`.substr(0,36)}});export{o as s,r as v};
