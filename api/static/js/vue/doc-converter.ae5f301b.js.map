{"version":3,"file":"doc-converter.ae5f301b.js","sources":["../../../src/composables/useDocConverter.js","../../../src/views/DocConverterView.vue","../../../src/standalone/doc-converter.js"],"sourcesContent":["// src/composables/useDocConverter.js\nimport { ref, computed, watch } from 'vue';\nimport { useDocConverterStore } from '@/stores/docConverterStore';\nimport { useToast } from '@/composables/useToast';\n\nexport function useDocConverter() {\n  const docConverterStore = useDocConverterStore();\n  const { showToast } = useToast();\n\n  // Reactive state\n  const selectedFiles = ref([]);\n  const isConverting = ref(false);\n  const conversionProgress = ref(0);\n  const currentProcessingFile = ref('');\n  const conversionError = ref(null);\n  const showPreviewModal = ref(false);\n  const previewData = ref(null);\n\n  // Default conversion options\n  const conversionOptions = ref({\n    outputFormat: 'markdown',\n    splitSections: true,\n    extractImages: true,\n    imageQuality: 'medium',\n    metadataHandling: 'extract',\n    advancedParsing: true,\n    tableDetection: 'auto',\n    ocrLevel: 'basic',\n    formatDetection: true\n  });\n\n  // Computed properties\n  const conversionResults = computed(() => docConverterStore.resultsByDate);\n  const hasResults = computed(() => docConverterStore.hasResults);\n  const isLoading = computed(() => docConverterStore.isLoading);\n\n  // Constants\n  const acceptedFormats = [\n    '.pdf', '.docx', '.doc', '.xlsx', '.xls', '.pptx', '.ppt', '.html', '.txt'\n  ];\n  const maxFileSize = 50 * 1024 * 1024; // 50 MB\n\n  // Methods\n  const handleFilesSelected = (files) => {\n    selectedFiles.value = [...selectedFiles.value, ...files];\n  };\n\n  const removeFile = (fileToRemove) => {\n    selectedFiles.value = selectedFiles.value.filter(file => file !== fileToRemove);\n  };\n\n  const clearSelectedFiles = () => {\n    selectedFiles.value = [];\n  };\n\n  const startConversion = async () => {\n    if (selectedFiles.value.length === 0) return;\n    \n    try {\n      isConverting.value = true;\n      conversionError.value = null;\n      conversionProgress.value = 0;\n      \n      // Create FormData for file upload\n      const formData = new FormData();\n      selectedFiles.value.forEach(file => {\n        formData.append('files', file);\n      });\n      \n      // Add options\n      Object.entries(conversionOptions.value).forEach(([key, value]) => {\n        formData.append(key, value);\n      });\n      \n      // Start conversion and track progress\n      const response = await docConverterStore.convertDocuments(\n        formData, \n        (progress, filename) => {\n          conversionProgress.value = progress;\n          currentProcessingFile.value = filename;\n        }\n      );\n      \n      // Conversion successful\n      showToast('Konvertierung erfolgreich abgeschlossen', 'success');\n      \n    } catch (error) {\n      console.error('Konvertierungsfehler:', error);\n      conversionError.value = error.message || 'Bei der Konvertierung ist ein Fehler aufgetreten.';\n      showToast('Konvertierungsfehler: ' + conversionError.value, 'error');\n    } finally {\n      isConverting.value = false;\n      currentProcessingFile.value = '';\n    }\n  };\n\n  const cancelConversion = async () => {\n    try {\n      await docConverterStore.cancelConversion();\n      isConverting.value = false;\n      conversionProgress.value = 0;\n      currentProcessingFile.value = '';\n      showToast('Konvertierung abgebrochen', 'info');\n    } catch (error) {\n      console.error('Fehler beim Abbrechen der Konvertierung:', error);\n    }\n  };\n\n  const loadPreviousResults = async () => {\n    try {\n      await docConverterStore.loadPreviousResults();\n    } catch (error) {\n      console.error('Fehler beim Laden vorheriger Ergebnisse:', error);\n    }\n  };\n\n  const viewResult = (result) => {\n    previewData.value = result;\n    showPreviewModal.value = true;\n  };\n\n  const downloadResult = (result) => {\n    docConverterStore.downloadConvertedFile(result.id);\n  };\n\n  const deleteResult = async (result) => {\n    try {\n      await docConverterStore.deleteResult(result.id);\n      showToast(`\"${result.fileName}\" wurde gelöscht`, 'info');\n    } catch (error) {\n      showToast(`Fehler beim Löschen: ${error.message}`, 'error');\n    }\n  };\n\n  const clearAllResults = async () => {\n    try {\n      await docConverterStore.clearAllResults();\n      showToast('Alle Konvertierungsergebnisse wurden gelöscht', 'info');\n    } catch (error) {\n      showToast(`Fehler beim Löschen aller Ergebnisse: ${error.message}`, 'error');\n    }\n  };\n\n  const closePreviewModal = () => {\n    showPreviewModal.value = false;\n    previewData.value = null;\n  };\n\n  return {\n    // State\n    selectedFiles,\n    isConverting,\n    conversionProgress,\n    currentProcessingFile,\n    conversionError,\n    conversionOptions,\n    showPreviewModal,\n    previewData,\n    \n    // Computed\n    conversionResults,\n    hasResults,\n    isLoading,\n    \n    // Constants\n    acceptedFormats,\n    maxFileSize,\n    \n    // Methods\n    handleFilesSelected,\n    removeFile,\n    clearSelectedFiles,\n    startConversion,\n    cancelConversion,\n    loadPreviousResults,\n    viewResult,\n    downloadResult,\n    deleteResult,\n    clearAllResults,\n    closePreviewModal\n  };\n}","<!-- src/views/DocConverterView.vue -->\n<template>\n  <div class=\"doc-converter-view\">\n    <!-- Da wir DocConverter.vue direkt in diese Datei kopieren, muss kein Import erfolgen -->\n    <header class=\"header\">\n      <h1 class=\"title\">nscale Dokumenten-Konverter</h1>\n      <p class=\"subtitle\">Konvertieren Sie Ihre Dokumente zu durchsuchbarem Text für das nscale DMS</p>\n    </header>\n\n    <main class=\"main-content\">\n      <!-- Fortschrittsanzeige -->\n      <ConversionProgress \n        v-if=\"isConverting\" \n        :progress=\"conversionProgress\" \n        :current-file=\"currentProcessingFile\"\n        :error=\"conversionError\"\n        @cancel=\"cancelConversion\"\n      />\n\n      <!-- Upload-Bereich wenn keine Konvertierung läuft -->\n      <div v-else class=\"conversion-panel\">\n        <div class=\"panel-section\">\n          <h2 class=\"section-title\">1. Dokumente hochladen</h2>\n          <FileUpload \n            :accepted-formats=\"acceptedFormats\"\n            :max-file-size=\"maxFileSize\"\n            :multiple=\"true\"\n            @files-selected=\"handleFilesSelected\"\n          />\n          \n          <div v-if=\"selectedFiles.length > 0\" class=\"selected-files\">\n            <h3 class=\"subsection-title\">Ausgewählte Dateien ({{ selectedFiles.length }})</h3>\n            <FileList \n              :files=\"selectedFiles\" \n              @remove-file=\"removeFile\"\n            />\n          </div>\n        </div>\n\n        <div class=\"panel-section\">\n          <h2 class=\"section-title\">2. Konvertierungsoptionen</h2>\n          <ConversionOptions \n            v-model:options=\"conversionOptions\"\n            :disabled=\"selectedFiles.length === 0\"\n          />\n        </div>\n\n        <div class=\"panel-section\">\n          <h2 class=\"section-title\">3. Konvertierung starten</h2>\n          <div class=\"action-buttons\">\n            <button \n              class=\"btn-primary\" \n              :disabled=\"selectedFiles.length === 0 || isConverting\" \n              @click=\"startConversion\"\n            >\n              <i class=\"fas fa-sync-alt\"></i>\n              Konvertierung starten\n            </button>\n            <button \n              class=\"btn-secondary\" \n              :disabled=\"selectedFiles.length === 0\" \n              @click=\"clearSelectedFiles\"\n            >\n              <i class=\"fas fa-times\"></i>\n              Auswahl zurücksetzen\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- Ergebnis-Bereich -->\n      <div v-if=\"conversionResults.length > 0\" class=\"results-panel\">\n        <h2 class=\"section-title\">Konvertierungsergebnisse</h2>\n        <ConversionResults \n          :results=\"conversionResults\"\n          @view-result=\"viewResult\"\n          @download-result=\"downloadResult\"\n          @delete-result=\"deleteResult\"\n          @clear-all=\"clearAllResults\"\n        />\n      </div>\n    </main>\n\n    <!-- Ergebnis-Vorschau-Modal -->\n    <ResultPreviewModal \n      v-if=\"showPreviewModal\"\n      :preview-data=\"previewData\"\n      @close=\"closePreviewModal\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { onMounted } from 'vue';\nimport FileUpload from '@/components/doc-converter/FileUpload.vue';\nimport FileList from '@/components/doc-converter/FileList.vue';\nimport ConversionOptions from '@/components/doc-converter/ConversionOptions.vue';\nimport ConversionProgress from '@/components/doc-converter/ConversionProgress.vue';\nimport ConversionResults from '@/components/doc-converter/ConversionResults.vue';\nimport ResultPreviewModal from '@/components/doc-converter/ResultPreviewModal.vue';\nimport { useAuthStore } from '@/stores/authStore';\nimport { useToast } from '@/composables/useToast';\nimport { useDocConverter } from '@/composables/useDocConverter';\n\n// Stores and Composables\nconst authStore = useAuthStore();\nconst { showToast } = useToast();\nconst {\n  // State\n  selectedFiles,\n  isConverting,\n  conversionProgress,\n  currentProcessingFile,\n  conversionError,\n  conversionOptions,\n  showPreviewModal,\n  previewData,\n  \n  // Computed\n  conversionResults,\n  \n  // Constants\n  acceptedFormats,\n  maxFileSize,\n  \n  // Methods\n  handleFilesSelected,\n  removeFile,\n  clearSelectedFiles,\n  startConversion,\n  cancelConversion,\n  loadPreviousResults,\n  viewResult,\n  downloadResult,\n  deleteResult,\n  clearAllResults,\n  closePreviewModal\n} = useDocConverter();\n\n// Lebenszyklus-Hooks\nonMounted(async () => {\n  // Prüfe, ob der Benutzer authentifiziert ist\n  if (!authStore.isAuthenticated) {\n    showToast('Bitte melden Sie sich an, um den Dokumentenkonverter zu nutzen', 'warning');\n    return;\n  }\n  \n  // Lade vorherige Konvertierungsergebnisse, falls vorhanden\n  await loadPreviousResults();\n});\n</script>\n\n<style scoped>\n.doc-converter-view {\n  min-height: 100vh;\n  background-color: var(--nscale-gray, #f7f7f7);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.doc-converter {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  color: var(--nscale-dark-gray);\n  width: 100%;\n}\n\n.header {\n  margin-bottom: 2rem;\n  text-align: center;\n}\n\n.title {\n  font-size: 2rem;\n  font-weight: 600;\n  color: var(--nscale-green);\n  margin-bottom: 0.5rem;\n}\n\n.subtitle {\n  font-size: 1.1rem;\n  color: var(--nscale-dark-gray);\n  opacity: 0.8;\n}\n\n.main-content {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  max-width: 1200px;\n  width: 100%;\n}\n\n.conversion-panel, .results-panel {\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n  overflow: hidden;\n}\n\n.panel-section {\n  padding: 1.5rem;\n  border-bottom: 1px solid var(--nscale-gray-medium);\n}\n\n.panel-section:last-child {\n  border-bottom: none;\n}\n\n.section-title {\n  font-size: 1.25rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n  color: var(--nscale-dark-gray);\n}\n\n.subsection-title {\n  font-size: 1rem;\n  font-weight: 500;\n  margin: 1rem 0 0.5rem;\n  color: var(--nscale-dark-gray);\n}\n\n.selected-files {\n  margin-top: 1.5rem;\n}\n\n.action-buttons {\n  display: flex;\n  gap: 1rem;\n  margin-top: 1rem;\n}\n\n.btn-primary {\n  background-color: var(--nscale-green);\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 0.75rem 1.5rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s, transform 0.1s;\n  display: inline-flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.btn-primary:hover {\n  background-color: var(--nscale-green-dark);\n  transform: translateY(-1px);\n}\n\n.btn-primary:active {\n  transform: translateY(0);\n}\n\n.btn-primary:disabled {\n  background-color: var(--nscale-gray-medium);\n  cursor: not-allowed;\n  transform: none;\n}\n\n.btn-secondary {\n  background-color: white;\n  color: var(--nscale-dark-gray);\n  border: 1px solid var(--nscale-gray-medium);\n  border-radius: 4px;\n  padding: 0.75rem 1.5rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n  display: inline-flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.btn-secondary:hover {\n  background-color: var(--nscale-gray);\n  transform: translateY(-1px);\n}\n\n.btn-secondary:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n  transform: none;\n}\n\n/* Dark Mode Anpassungen */\n:global(.theme-dark) .doc-converter-view {\n  background-color: #121212;\n}\n\n:global(.theme-dark) .conversion-panel,\n:global(.theme-dark) .results-panel {\n  background-color: #1e1e1e;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);\n}\n\n:global(.theme-dark) .panel-section {\n  border-bottom-color: #333;\n}\n\n:global(.theme-dark) .title {\n  color: #00c060;\n}\n\n:global(.theme-dark) .subtitle,\n:global(.theme-dark) .section-title,\n:global(.theme-dark) .subsection-title {\n  color: #f0f0f0;\n}\n\n:global(.theme-dark) .btn-primary {\n  background-color: #00c060;\n}\n\n:global(.theme-dark) .btn-primary:hover {\n  background-color: #00a550;\n}\n\n:global(.theme-dark) .btn-secondary {\n  background-color: #333;\n  color: #f0f0f0;\n  border-color: #444;\n}\n\n:global(.theme-dark) .btn-secondary:hover {\n  background-color: #444;\n}\n\n/* Kontrast-Modus Anpassungen */\n:global(.theme-contrast) .doc-converter-view {\n  background-color: #000000;\n}\n\n:global(.theme-contrast) .conversion-panel,\n:global(.theme-contrast) .results-panel {\n  background-color: #000000;\n  border: 2px solid #ffeb3b;\n  box-shadow: 0 4px 6px rgba(255, 235, 59, 0.2);\n}\n\n:global(.theme-contrast) .panel-section {\n  border-bottom-color: #ffeb3b;\n}\n\n:global(.theme-contrast) .title,\n:global(.theme-contrast) .subtitle,\n:global(.theme-contrast) .section-title,\n:global(.theme-contrast) .subsection-title {\n  color: #ffeb3b;\n}\n\n:global(.theme-contrast) .btn-primary {\n  background-color: #ffeb3b;\n  color: #000000;\n  font-weight: bold;\n}\n\n:global(.theme-contrast) .btn-primary:hover {\n  background-color: #ffd600;\n}\n\n:global(.theme-contrast) .btn-secondary {\n  background-color: #000000;\n  color: #ffeb3b;\n  border: 2px solid #ffeb3b;\n}\n\n:global(.theme-contrast) .btn-secondary:hover {\n  background-color: #333300;\n}\n</style>","// src/standalone/doc-converter.js\nimport { createApp } from 'vue'\nimport { createPinia } from 'pinia'\n// Direkter Import ohne Alias - verwende den exakten Pfad\nimport DocConverterView from '../views/DocConverterView.vue'\n\n// Stelle sicher, dass Stores verfügbar sind\nimport { useDocConverterStore } from '../stores/docConverterStore'\nimport { useAuthStore } from '../stores/authStore'\nimport { useFeatureToggleStore } from '../stores/featureToggleStore'\n\n// Styles importieren\n//import '@/assets/styles/main.css'\n\n// Weitere Komposables für die Anwendungsfunktionalität\nimport { useToast } from '../composables/useToast'\n\n// Keine FontAwesome-Importe nötig - wir verwenden die bereits eingebundenen Icons aus dem Haupt-HTML\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Versuche verschiedene mögliche Mount-Elemente zu finden\n  const mountElementIds = [\n    'doc-converter-app',                 // Vue.js standard\n    'doc-converter-container',           // Klassische UI\n    'docConverterContainer',             // Alternative ID\n    '[data-vue-component=\"doc-converter\"]' // Attribut-Selektor\n  ];\n  \n  // Versuche jeden Selektor\n  let mountElement = null;\n  for (const selector of mountElementIds) {\n    const el = selector.startsWith('[') \n               ? document.querySelector(selector) \n               : document.getElementById(selector);\n    \n    if (el) {\n      mountElement = el;\n      console.log(`Mount-Element für DocConverter gefunden: ${selector}`);\n      break;\n    }\n  }\n  \n  if (mountElement) {\n    try {\n      const app = createApp(DocConverterView);\n      \n      // Pinia Store registrieren\n      const pinia = createPinia();\n      app.use(pinia);\n      \n      // Mock für FontAwesome-Komponente, falls nötig\n      app.component('FontAwesomeIcon', {\n        props: ['icon'],\n        template: '<i :class=\"icon\"></i>'\n      });\n      \n      // App mounten auf dem gefundenen Element\n      app.mount(mountElement);\n      \n      console.log('DocConverter wurde erfolgreich initialisiert');\n      \n      // Setze globales Flag, das die erfolgreiche Initialisierung anzeigt\n      window.vueDocConverterInitialized = true;\n    } catch (error) {\n      console.error('Fehler bei der Initialisierung des Vue.js DocConverters:', error);\n      \n      // Fallback-Aktivierung, wenn klassische Implementierung verfügbar ist\n      if (typeof window.initializeClassicDocConverter === 'function') {\n        console.warn('Aktiviere klassische DocConverter-Implementierung als Fallback');\n        window.initializeClassicDocConverter();\n      }\n    }\n  } else {\n    console.warn('Kein Mounting-Element für DocConverter gefunden, überprüfe diese Selektoren:', mountElementIds);\n  }\n})"],"names":["useDocConverter","docConverterStore","useDocConverterStore","showToast","useToast","selectedFiles","ref","isConverting","conversionProgress","currentProcessingFile","conversionError","showPreviewModal","previewData","conversionOptions","conversionResults","computed","hasResults","isLoading","acceptedFormats","maxFileSize","files","fileToRemove","file","formData","key","value","response","progress","filename","error","result","authStore","useAuthStore","handleFilesSelected","removeFile","clearSelectedFiles","startConversion","cancelConversion","loadPreviousResults","viewResult","downloadResult","deleteResult","clearAllResults","closePreviewModal","onMounted","mountElementIds","mountElement","selector","el","app","createApp","DocConverterView","pinia","createPinia"],"mappings":"+NAKO,SAASA,IAAkB,CAChC,MAAMC,EAAoBC,IACpB,CAAE,UAAAC,GAAcC,IAGhBC,EAAgBC,EAAI,CAAA,CAAE,EACtBC,EAAeD,EAAI,EAAK,EACxBE,EAAqBF,EAAI,CAAC,EAC1BG,EAAwBH,EAAI,EAAE,EAC9BI,EAAkBJ,EAAI,IAAI,EAC1BK,EAAmBL,EAAI,EAAK,EAC5BM,EAAcN,EAAI,IAAI,EAGtBO,EAAoBP,EAAI,CAC5B,aAAc,WACd,cAAe,GACf,cAAe,GACf,aAAc,SACd,iBAAkB,UAClB,gBAAiB,GACjB,eAAgB,OAChB,SAAU,QACV,gBAAiB,EACrB,CAAG,EAGKQ,EAAoBC,EAAS,IAAMd,EAAkB,aAAa,EAClEe,EAAaD,EAAS,IAAMd,EAAkB,UAAU,EACxDgB,EAAYF,EAAS,IAAMd,EAAkB,SAAS,EAGtDiB,EAAkB,CACtB,OAAQ,QAAS,OAAQ,QAAS,OAAQ,QAAS,OAAQ,QAAS,MACxE,EACQC,EAAc,GAAK,KAAO,KA4GhC,MAAO,CAEL,cAAAd,EACA,aAAAE,EACA,mBAAAC,EACA,sBAAAC,EACA,gBAAAC,EACA,kBAAAG,EACA,iBAAAF,EACA,YAAAC,EAGA,kBAAAE,EACA,WAAAE,EACA,UAAAC,EAGA,gBAAAC,EACA,YAAAC,EAGA,oBA9H2BC,GAAU,CACrCf,EAAc,MAAQ,CAAC,GAAGA,EAAc,MAAO,GAAGe,CAAK,CAC3D,EA6HI,WA3HkBC,GAAiB,CACnChB,EAAc,MAAQA,EAAc,MAAM,OAAOiB,GAAQA,IAASD,CAAY,CAClF,EA0HI,mBAxHyB,IAAM,CAC/BhB,EAAc,MAAQ,EAC1B,EAuHI,gBArHsB,SAAY,CAClC,GAAIA,EAAc,MAAM,SAAW,EAEnC,GAAI,CACFE,EAAa,MAAQ,GACrBG,EAAgB,MAAQ,KACxBF,EAAmB,MAAQ,EAG3B,MAAMe,EAAW,IAAI,SACrBlB,EAAc,MAAM,QAAQiB,GAAQ,CAClCC,EAAS,OAAO,QAASD,CAAI,CACrC,CAAO,EAGD,OAAO,QAAQT,EAAkB,KAAK,EAAE,QAAQ,CAAC,CAACW,EAAKC,CAAK,IAAM,CAChEF,EAAS,OAAOC,EAAKC,CAAK,CAClC,CAAO,EAGD,MAAMC,EAAW,MAAMzB,EAAkB,iBACvCsB,EACA,CAACI,EAAUC,IAAa,CACtBpB,EAAmB,MAAQmB,EAC3BlB,EAAsB,MAAQmB,CAC/B,CACT,EAGMzB,EAAU,0CAA2C,SAAS,CAE/D,OAAQ0B,EAAO,CACd,QAAQ,MAAM,wBAAyBA,CAAK,EAC5CnB,EAAgB,MAAQmB,EAAM,SAAW,oDACzC1B,EAAU,yBAA2BO,EAAgB,MAAO,OAAO,CACzE,QAAc,CACRH,EAAa,MAAQ,GACrBE,EAAsB,MAAQ,EAC/B,CACL,EA+EI,iBA7EuB,SAAY,CACnC,GAAI,CACF,MAAMR,EAAkB,mBACxBM,EAAa,MAAQ,GACrBC,EAAmB,MAAQ,EAC3BC,EAAsB,MAAQ,GAC9BN,EAAU,4BAA6B,MAAM,CAC9C,OAAQ0B,EAAO,CACd,QAAQ,MAAM,2CAA4CA,CAAK,CAChE,CACL,EAoEI,oBAlE0B,SAAY,CACtC,GAAI,CACF,MAAM5B,EAAkB,qBACzB,OAAQ4B,EAAO,CACd,QAAQ,MAAM,2CAA4CA,CAAK,CAChE,CACL,EA6DI,WA3DkBC,GAAW,CAC7BlB,EAAY,MAAQkB,EACpBnB,EAAiB,MAAQ,EAC7B,EAyDI,eAvDsBmB,GAAW,CACjC7B,EAAkB,sBAAsB6B,EAAO,EAAE,CACrD,EAsDI,aApDmB,MAAOA,GAAW,CACrC,GAAI,CACF,MAAM7B,EAAkB,aAAa6B,EAAO,EAAE,EAC9C3B,EAAU,IAAI2B,EAAO,QAAQ,mBAAoB,MAAM,CACxD,OAAQD,EAAO,CACd1B,EAAU,wBAAwB0B,EAAM,OAAO,GAAI,OAAO,CAC3D,CACL,EA8CI,gBA5CsB,SAAY,CAClC,GAAI,CACF,MAAM5B,EAAkB,kBACxBE,EAAU,gDAAiD,MAAM,CAClE,OAAQ0B,EAAO,CACd1B,EAAU,yCAAyC0B,EAAM,OAAO,GAAI,OAAO,CAC5E,CACL,EAsCI,kBApCwB,IAAM,CAC9BlB,EAAiB,MAAQ,GACzBC,EAAY,MAAQ,IACxB,CAkCA,CACA,0XC5EA,MAAMmB,EAAYC,EAAY,EACxB,CAAE,UAAA7B,CAAS,EAAKC,IAChB,CAEJ,cAAAC,EACA,aAAAE,EACA,mBAAAC,EACA,sBAAAC,EACA,gBAAAC,EACA,kBAAAG,EACA,iBAAAF,EACA,YAAAC,EAGA,kBAAAE,EAGA,gBAAAI,EACA,YAAAC,EAGA,oBAAAc,EACA,WAAAC,EACA,mBAAAC,EACA,gBAAAC,EACA,iBAAAC,EACA,oBAAAC,EACA,WAAAC,EACA,eAAAC,EACA,aAAAC,EACA,gBAAAC,EACA,kBAAAC,CACF,EAAI3C,GAAe,EAGnB,OAAA4C,EAAU,SAAY,CAEpB,GAAI,CAACb,EAAU,gBAAiB,CAC9B5B,EAAU,iEAAkE,SAAS,EACrF,MACF,CAGA,MAAMmC,EAAmB,CAC3B,CAAC,46DClID,SAAS,iBAAiB,mBAAoB,IAAM,CAElD,MAAMO,EAAkB,CACtB,oBACA,0BACA,wBACA,sCACJ,EAGE,IAAIC,EAAe,KACnB,UAAWC,KAAYF,EAAiB,CACtC,MAAMG,EAAKD,EAAS,WAAW,GAAG,EACrB,SAAS,cAAcA,CAAQ,EAC/B,SAAS,eAAeA,CAAQ,EAE7C,GAAIC,EAAI,CACNF,EAAeE,EACf,QAAQ,IAAI,4CAA4CD,CAAQ,EAAE,EAClE,KACD,CACF,CAED,GAAID,EACF,GAAI,CACF,MAAMG,EAAMC,EAAUC,EAAgB,EAGhCC,EAAQC,KACdJ,EAAI,IAAIG,CAAK,EAGbH,EAAI,UAAU,kBAAmB,CAC/B,MAAO,CAAC,MAAM,EACd,SAAU,uBAClB,CAAO,EAGDA,EAAI,MAAMH,CAAY,EAEtB,QAAQ,IAAI,8CAA8C,EAG1D,OAAO,2BAA6B,EACrC,OAAQjB,EAAO,CACd,QAAQ,MAAM,2DAA4DA,CAAK,EAG3E,OAAO,OAAO,+BAAkC,aAClD,QAAQ,KAAK,gEAAgE,EAC7E,OAAO,8BAA6B,EAEvC,MAED,QAAQ,KAAK,+EAAgFgB,CAAe,CAEhH,CAAC"}