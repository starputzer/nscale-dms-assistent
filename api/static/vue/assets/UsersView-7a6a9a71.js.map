{"version":3,"file":"UsersView-7a6a9a71.js","sources":["../../src/stores/userStore.js","../../src/components/admin/users/UserList.vue","../../src/components/admin/users/UserForm.vue","../../src/components/common/ConfirmDialog.vue","../../src/views/admin/UsersView.vue"],"sourcesContent":["// stores/userStore.js\nimport { defineStore } from 'pinia';\nimport axios from 'axios';\nimport { useAuthStore } from './authStore';\n\n/**\n * Store zur Verwaltung von Benutzern im Admin-Bereich\n * Enthält Funktionen zum Laden, Erstellen, Aktualisieren und Löschen von Benutzern\n */\nexport const useUserStore = defineStore('user', {\n  state: () => ({\n    // Liste aller Benutzer\n    users: [],\n    \n    // Aktuell bearbeiteter Benutzer\n    selectedUser: null,\n    \n    // Filter für die Benutzerliste\n    filter: {\n      role: 'all',  // 'all', 'user', 'admin'\n      search: '',\n    },\n    \n    // Sortierung\n    sort: {\n      field: 'created_at',\n      direction: 'desc'\n    },\n    \n    // Status-Flags\n    loading: false,\n    error: null,\n    \n    // Flag für das Bearbeitungs-Modal\n    showUserModal: false,\n    modalMode: 'create', // 'create', 'edit'\n    \n    // Bestätigungsdialog für Löschen/Rolle ändern\n    confirmDialog: {\n      show: false,\n      type: null, // 'delete', 'role'\n      userId: null,\n      newRole: null,\n      message: ''\n    }\n  }),\n  \n  getters: {\n    /**\n     * Gefilterte und sortierte Benutzerliste\n     */\n    filteredUsers: (state) => {\n      let result = [...state.users];\n      \n      // Nach Rolle filtern\n      if (state.filter.role !== 'all') {\n        result = result.filter(user => user.role === state.filter.role);\n      }\n      \n      // Nach Suchbegriff filtern\n      if (state.filter.search.trim()) {\n        const query = state.filter.search.toLowerCase();\n        result = result.filter(user => \n          user.email.toLowerCase().includes(query)\n        );\n      }\n      \n      // Sortieren\n      result.sort((a, b) => {\n        let aValue = a[state.sort.field];\n        let bValue = b[state.sort.field];\n        \n        // Spezialbehandlung für Datumsfelder\n        if (state.sort.field === 'created_at' || state.sort.field === 'last_login') {\n          aValue = aValue ? aValue : 0;\n          bValue = bValue ? bValue : 0;\n        }\n        \n        if (state.sort.direction === 'asc') {\n          return aValue > bValue ? 1 : -1;\n        } else {\n          return aValue < bValue ? 1 : -1;\n        }\n      });\n      \n      return result;\n    },\n    \n    /**\n     * Prüft, ob der Store eine ausreichende Berechtigung hat\n     */\n    hasAdminAccess: () => {\n      const authStore = useAuthStore();\n      return authStore.isAdmin;\n    },\n    \n    /**\n     * Benutzerstatistiken\n     */\n    userStats: (state) => {\n      return {\n        total: state.users.length,\n        admins: state.users.filter(user => user.role === 'admin').length,\n        standardUsers: state.users.filter(user => user.role === 'user').length,\n      };\n    }\n  },\n  \n  actions: {\n    /**\n     * Lädt die Benutzerliste vom Server\n     */\n    async loadUsers() {\n      if (!this.hasAdminAccess) return;\n      \n      this.loading = true;\n      this.error = null;\n      \n      try {\n        const response = await axios.get('/api/admin/users');\n        this.users = response.data.users || [];\n      } catch (error) {\n        console.error('Fehler beim Laden der Benutzer:', error);\n        this.error = error.response?.data?.detail || 'Fehler beim Laden der Benutzer';\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    /**\n     * Erstellt einen neuen Benutzer\n     * @param {Object} userData - Benutzerdaten (email, password, role)\n     */\n    async createUser(userData) {\n      if (!this.hasAdminAccess) return;\n      \n      this.loading = true;\n      this.error = null;\n      \n      try {\n        const response = await axios.post('/api/admin/users', userData);\n        \n        // Benutzerliste neu laden\n        await this.loadUsers();\n        \n        return true;\n      } catch (error) {\n        console.error('Fehler beim Erstellen des Benutzers:', error);\n        this.error = error.response?.data?.detail || 'Fehler beim Erstellen des Benutzers';\n        throw new Error(this.error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    /**\n     * Aktualisiert die Rolle eines Benutzers\n     * @param {number} userId - Benutzer-ID\n     * @param {string} newRole - Neue Rolle ('user' oder 'admin')\n     */\n    async updateUserRole(userId, newRole) {\n      if (!this.hasAdminAccess) return;\n      \n      this.loading = true;\n      this.error = null;\n      \n      try {\n        const response = await axios.put(`/api/admin/users/${userId}/role`, { role: newRole });\n        \n        // Benutzerliste neu laden\n        await this.loadUsers();\n        \n        return true;\n      } catch (error) {\n        console.error(`Fehler beim Aktualisieren der Rolle für Benutzer ${userId}:`, error);\n        this.error = error.response?.data?.detail || 'Fehler beim Aktualisieren der Benutzerrolle';\n        throw new Error(this.error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    /**\n     * Löscht einen Benutzer\n     * @param {number} userId - Benutzer-ID\n     */\n    async deleteUser(userId) {\n      if (!this.hasAdminAccess) return;\n      \n      this.loading = true;\n      this.error = null;\n      \n      try {\n        const response = await axios.delete(`/api/admin/users/${userId}`);\n        \n        // Benutzerliste neu laden\n        await this.loadUsers();\n        \n        return true;\n      } catch (error) {\n        console.error(`Fehler beim Löschen des Benutzers ${userId}:`, error);\n        this.error = error.response?.data?.detail || 'Fehler beim Löschen des Benutzers';\n        throw new Error(this.error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    /**\n     * Wählt einen Benutzer zur Bearbeitung aus\n     * @param {Object} user - Benutzer-Objekt\n     */\n    selectUser(user) {\n      this.selectedUser = user;\n    },\n    \n    /**\n     * Setzt die Filter für die Benutzerliste\n     * @param {Object} filter - Filterobjekt\n     */\n    setFilter(filter) {\n      this.filter = { ...this.filter, ...filter };\n    },\n    \n    /**\n     * Ändert die Sortierung der Benutzerliste\n     * @param {string} field - Feldname zur Sortierung\n     */\n    toggleSort(field) {\n      if (this.sort.field === field) {\n        // Richtung umkehren, wenn bereits nach diesem Feld sortiert wird\n        this.sort.direction = this.sort.direction === 'asc' ? 'desc' : 'asc';\n      } else {\n        // Neues Feld, Standardrichtung desc\n        this.sort.field = field;\n        this.sort.direction = 'desc';\n      }\n    },\n    \n    /**\n     * Öffnet den Dialog zum Erstellen/Bearbeiten eines Benutzers\n     * @param {string} mode - Modus ('create' oder 'edit')\n     * @param {Object} user - Benutzer-Objekt für den Bearbeitungsmodus\n     */\n    openUserModal(mode, user = null) {\n      this.modalMode = mode;\n      this.selectedUser = user;\n      this.showUserModal = true;\n    },\n    \n    /**\n     * Schließt den Benutzer-Dialog\n     */\n    closeUserModal() {\n      this.showUserModal = false;\n      this.selectedUser = null;\n    },\n    \n    /**\n     * Öffnet den Bestätigungsdialog\n     * @param {string} type - Typ des Dialogs ('delete' oder 'role')\n     * @param {Object} data - Zusätzliche Daten (userId, newRole, usw.)\n     */\n    openConfirmDialog(type, data) {\n      let message = '';\n      \n      if (type === 'delete') {\n        const user = this.users.find(u => u.id === data.userId);\n        message = `Möchten Sie den Benutzer \"${user?.email || 'Unbekannt'}\" wirklich löschen?`;\n      } else if (type === 'role') {\n        const user = this.users.find(u => u.id === data.userId);\n        const roleName = data.newRole === 'admin' ? 'Administrator' : 'Standardbenutzer';\n        message = `Möchten Sie die Rolle von \"${user?.email || 'Unbekannt'}\" zu \"${roleName}\" ändern?`;\n      }\n      \n      this.confirmDialog = {\n        show: true,\n        type,\n        userId: data.userId,\n        newRole: data.newRole,\n        message\n      };\n    },\n    \n    /**\n     * Schließt den Bestätigungsdialog\n     */\n    closeConfirmDialog() {\n      this.confirmDialog = {\n        show: false,\n        type: null,\n        userId: null,\n        newRole: null,\n        message: ''\n      };\n    },\n    \n    /**\n     * Führt die bestätigte Aktion aus\n     */\n    async confirmAction() {\n      try {\n        if (this.confirmDialog.type === 'delete') {\n          await this.deleteUser(this.confirmDialog.userId);\n        } else if (this.confirmDialog.type === 'role') {\n          await this.updateUserRole(this.confirmDialog.userId, this.confirmDialog.newRole);\n        }\n      } catch (error) {\n        // Fehler wird bereits in den jeweiligen Aktionen gesetzt\n      } finally {\n        this.closeConfirmDialog();\n      }\n    }\n  }\n});","<template>\n  <div class=\"user-list\">\n    <div class=\"list-header\">\n      <h2 class=\"list-title\">{{ title }}</h2>\n      <div class=\"filter-controls\">\n        <!-- Filter by role -->\n        <div class=\"filter-select\">\n          <select v-model=\"activeFilter\" @change=\"applyFilters\">\n            <option value=\"all\">Alle Rollen</option>\n            <option value=\"admin\">Administratoren</option>\n            <option value=\"user\">Standardbenutzer</option>\n          </select>\n        </div>\n        \n        <!-- Search input -->\n        <div class=\"search-box\">\n          <input \n            type=\"text\" \n            v-model=\"searchQuery\" \n            placeholder=\"Suche nach E-Mail...\" \n            @input=\"applyFilters\"\n          />\n          <i class=\"fas fa-search\"></i>\n        </div>\n        \n        <!-- Add user button -->\n        <button @click=\"$emit('add-user')\" class=\"add-btn\">\n          <i class=\"fas fa-user-plus\"></i>\n          Benutzer hinzufügen\n        </button>\n      </div>\n    </div>\n    \n    <!-- Loading indicator -->\n    <div v-if=\"loading\" class=\"loading-container\">\n      <div class=\"loader\"></div>\n      <span>Benutzer werden geladen...</span>\n    </div>\n    \n    <!-- Empty state -->\n    <div v-else-if=\"users.length === 0\" class=\"empty-state\">\n      <i class=\"fas fa-users-slash\"></i>\n      <p>{{ emptyStateMessage }}</p>\n      <button \n        v-if=\"hasActiveFilters\" \n        class=\"reset-filters-btn\" \n        @click=\"resetFilters\"\n      >\n        Filter zurücksetzen\n      </button>\n    </div>\n    \n    <!-- Users table -->\n    <div v-else class=\"users-table-container\">\n      <table class=\"users-table\">\n        <thead>\n          <tr>\n            <th @click=\"toggleSort('id')\" class=\"sortable-header\">\n              ID\n              <i v-if=\"sortField === 'id'\" :class=\"['fas', sortDirection === 'asc' ? 'fa-sort-up' : 'fa-sort-down']\"></i>\n              <i v-else class=\"fas fa-sort\"></i>\n            </th>\n            <th @click=\"toggleSort('email')\" class=\"sortable-header\">\n              E-Mail\n              <i v-if=\"sortField === 'email'\" :class=\"['fas', sortDirection === 'asc' ? 'fa-sort-up' : 'fa-sort-down']\"></i>\n              <i v-else class=\"fas fa-sort\"></i>\n            </th>\n            <th @click=\"toggleSort('role')\" class=\"sortable-header\">\n              Rolle\n              <i v-if=\"sortField === 'role'\" :class=\"['fas', sortDirection === 'asc' ? 'fa-sort-up' : 'fa-sort-down']\"></i>\n              <i v-else class=\"fas fa-sort\"></i>\n            </th>\n            <th @click=\"toggleSort('created_at')\" class=\"sortable-header\">\n              Erstellt am\n              <i v-if=\"sortField === 'created_at'\" :class=\"['fas', sortDirection === 'asc' ? 'fa-sort-up' : 'fa-sort-down']\"></i>\n              <i v-else class=\"fas fa-sort\"></i>\n            </th>\n            <th @click=\"toggleSort('last_login')\" class=\"sortable-header\">\n              Letzter Login\n              <i v-if=\"sortField === 'last_login'\" :class=\"['fas', sortDirection === 'asc' ? 'fa-sort-up' : 'fa-sort-down']\"></i>\n              <i v-else class=\"fas fa-sort\"></i>\n            </th>\n            <th>Aktionen</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"user in users\" :key=\"user.id\" :class=\"{'admin-row': user.role === 'admin'}\">\n            <td>{{ user.id }}</td>\n            <td class=\"email-cell\">{{ user.email }}</td>\n            <td>\n              <span class=\"role-badge\" :class=\"{'admin-badge': user.role === 'admin', 'user-badge': user.role === 'user'}\">\n                {{ user.role === 'admin' ? 'Administrator' : 'Standardbenutzer' }}\n              </span>\n            </td>\n            <td>{{ formatDate(user.created_at) }}</td>\n            <td>{{ formatDate(user.last_login) || 'Nie' }}</td>\n            <td class=\"actions-cell\">\n              <!-- Change role button -->\n              <button \n                v-if=\"user.role === 'user'\" \n                @click=\"$emit('change-role', { userId: user.id, newRole: 'admin' })\" \n                class=\"action-btn promote-btn\" \n                title=\"Zum Administrator hochstufen\"\n              >\n                <i class=\"fas fa-user-shield\"></i>\n              </button>\n              \n              <button \n                v-else \n                @click=\"$emit('change-role', { userId: user.id, newRole: 'user' })\" \n                class=\"action-btn demote-btn\" \n                title=\"Zu Standardbenutzer herabstufen\"\n              >\n                <i class=\"fas fa-user\"></i>\n              </button>\n              \n              <!-- Delete button -->\n              <button \n                @click=\"$emit('delete-user', user.id)\" \n                class=\"action-btn delete-btn\" \n                title=\"Benutzer löschen\"\n              >\n                <i class=\"fas fa-trash-alt\"></i>\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch } from 'vue';\n\n// Props\nconst props = defineProps({\n  users: {\n    type: Array,\n    default: () => []\n  },\n  loading: {\n    type: Boolean,\n    default: false\n  },\n  title: {\n    type: String,\n    default: 'Benutzerliste'\n  }\n});\n\n// Emits\nconst emit = defineEmits([\n  'filter-change', \n  'sort-change', \n  'add-user', \n  'change-role', \n  'delete-user'\n]);\n\n// Local state\nconst activeFilter = ref('all');\nconst searchQuery = ref('');\nconst sortField = ref('created_at');\nconst sortDirection = ref('desc');\n\n// Computed properties\nconst hasActiveFilters = computed(() => {\n  return activeFilter.value !== 'all' || searchQuery.value.trim() !== '';\n});\n\nconst emptyStateMessage = computed(() => {\n  if (hasActiveFilters.value) {\n    return 'Keine passenden Benutzer gefunden.';\n  }\n  return 'Noch keine Benutzer vorhanden.';\n});\n\n// Methods\nconst applyFilters = () => {\n  emit('filter-change', {\n    role: activeFilter.value,\n    search: searchQuery.value\n  });\n};\n\nconst resetFilters = () => {\n  activeFilter.value = 'all';\n  searchQuery.value = '';\n  applyFilters();\n};\n\nconst toggleSort = (field) => {\n  if (sortField.value === field) {\n    // Reverse direction if already sorting by this field\n    sortDirection.value = sortDirection.value === 'asc' ? 'desc' : 'asc';\n  } else {\n    sortField.value = field;\n    sortDirection.value = 'desc';\n  }\n  \n  emit('sort-change', {\n    field: sortField.value,\n    direction: sortDirection.value\n  });\n};\n\nconst formatDate = (timestamp) => {\n  if (!timestamp) return null;\n  \n  const date = new Date(timestamp * 1000);\n  return date.toLocaleString('de-DE', {\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\n</script>\n\n<style scoped>\n.user-list {\n  background-color: #ffffff;\n  border-radius: 0.5rem;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  padding: 1.5rem;\n}\n\n.list-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1.5rem;\n  flex-wrap: wrap;\n  gap: 1rem;\n}\n\n.list-title {\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: #1e293b;\n  margin: 0;\n}\n\n.filter-controls {\n  display: flex;\n  gap: 0.75rem;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n.filter-select select {\n  padding: 0.5rem 2rem 0.5rem 1rem;\n  border: 1px solid #e2e8f0;\n  border-radius: 0.375rem;\n  background-color: #f8fafc;\n  font-size: 0.875rem;\n  color: #475569;\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='%2364748b'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M19 9l-7 7-7-7'%3E%3C/path%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: right 0.5rem center;\n  background-size: 1.25rem;\n}\n\n.search-box {\n  position: relative;\n}\n\n.search-box input {\n  padding: 0.5rem 2.5rem 0.5rem 1rem;\n  border: 1px solid #e2e8f0;\n  border-radius: 0.375rem;\n  background-color: #f8fafc;\n  font-size: 0.875rem;\n  color: #475569;\n  width: 200px;\n}\n\n.search-box i {\n  position: absolute;\n  right: 0.75rem;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #94a3b8;\n  pointer-events: none;\n}\n\n.add-btn {\n  padding: 0.5rem 1rem;\n  background-color: #3b82f6;\n  color: white;\n  border: none;\n  border-radius: 0.375rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.add-btn:hover {\n  background-color: #2563eb;\n}\n\n.loading-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 3rem;\n  color: #64748b;\n}\n\n.loader {\n  border: 3px solid #f3f3f3;\n  border-top: 3px solid #3b82f6;\n  border-radius: 50%;\n  width: 2rem;\n  height: 2rem;\n  animation: spin 1s linear infinite;\n  margin-bottom: 1rem;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 3rem;\n  text-align: center;\n  color: #64748b;\n}\n\n.empty-state i {\n  font-size: 3rem;\n  opacity: 0.5;\n  margin-bottom: 1rem;\n}\n\n.reset-filters-btn {\n  margin-top: 1rem;\n  padding: 0.5rem 1rem;\n  background-color: #f8fafc;\n  border: 1px solid #e2e8f0;\n  border-radius: 0.375rem;\n  color: #475569;\n  font-size: 0.875rem;\n  cursor: pointer;\n}\n\n.reset-filters-btn:hover {\n  background-color: #f1f5f9;\n}\n\n.users-table-container {\n  overflow-x: auto;\n}\n\n.users-table {\n  width: 100%;\n  border-collapse: collapse;\n  font-size: 0.875rem;\n  color: #334155;\n}\n\n.users-table th {\n  background-color: #f8fafc;\n  padding: 0.75rem 1rem;\n  text-align: left;\n  font-weight: 600;\n  color: #475569;\n  border-bottom: 1px solid #e2e8f0;\n}\n\n.sortable-header {\n  cursor: pointer;\n  user-select: none;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.sortable-header i {\n  font-size: 0.75rem;\n  color: #94a3b8;\n}\n\n.users-table td {\n  padding: 0.75rem 1rem;\n  border-bottom: 1px solid #e2e8f0;\n}\n\n.admin-row {\n  background-color: #eff6ff;\n}\n\n.email-cell {\n  max-width: 250px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.role-badge {\n  display: inline-block;\n  padding: 0.25rem 0.5rem;\n  border-radius: 0.25rem;\n  font-size: 0.75rem;\n  font-weight: 500;\n}\n\n.admin-badge {\n  background-color: #dbeafe;\n  color: #1e40af;\n}\n\n.user-badge {\n  background-color: #e0f2fe;\n  color: #0369a1;\n}\n\n.actions-cell {\n  white-space: nowrap;\n}\n\n.action-btn {\n  padding: 0.375rem;\n  border: none;\n  background: none;\n  color: #64748b;\n  border-radius: 0.25rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.action-btn:hover {\n  background-color: #f1f5f9;\n}\n\n.promote-btn:hover {\n  color: #1e40af;\n  background-color: #dbeafe;\n}\n\n.demote-btn:hover {\n  color: #0369a1;\n  background-color: #e0f2fe;\n}\n\n.delete-btn:hover {\n  color: #ef4444;\n  background-color: #fee2e2;\n}\n\n/* Dark Mode Support */\n:global(.theme-dark) .user-list {\n  background-color: #1e1e1e;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\n}\n\n:global(.theme-dark) .list-title {\n  color: #e0e0e0;\n}\n\n:global(.theme-dark) .filter-select select {\n  background-color: #252525;\n  border-color: #444;\n  color: #e0e0e0;\n}\n\n:global(.theme-dark) .search-box input {\n  background-color: #252525;\n  border-color: #444;\n  color: #e0e0e0;\n}\n\n:global(.theme-dark) .search-box i {\n  color: #777;\n}\n\n:global(.theme-dark) .add-btn {\n  background-color: #2563eb;\n}\n\n:global(.theme-dark) .add-btn:hover {\n  background-color: #1d4ed8;\n}\n\n:global(.theme-dark) .reset-filters-btn {\n  background-color: #252525;\n  border-color: #444;\n  color: #e0e0e0;\n}\n\n:global(.theme-dark) .reset-filters-btn:hover {\n  background-color: #333;\n}\n\n:global(.theme-dark) .users-table th {\n  background-color: #252525;\n  color: #e0e0e0;\n  border-bottom-color: #444;\n}\n\n:global(.theme-dark) .users-table td {\n  border-bottom-color: #444;\n  color: #e0e0e0;\n}\n\n:global(.theme-dark) .admin-row {\n  background-color: #162547;\n}\n\n:global(.theme-dark) .admin-badge {\n  background-color: #1e40af;\n  color: #dbeafe;\n}\n\n:global(.theme-dark) .user-badge {\n  background-color: #0369a1;\n  color: #e0f2fe;\n}\n\n:global(.theme-dark) .action-btn {\n  color: #aaa;\n}\n\n:global(.theme-dark) .action-btn:hover {\n  background-color: #333;\n}\n\n:global(.theme-dark) .promote-btn:hover {\n  color: #dbeafe;\n  background-color: #1e40af;\n}\n\n:global(.theme-dark) .demote-btn:hover {\n  color: #e0f2fe;\n  background-color: #0369a1;\n}\n\n:global(.theme-dark) .delete-btn:hover {\n  color: #fee2e2;\n  background-color: #b91c1c;\n}\n\n/* Responsive adjustments */\n@media (max-width: 768px) {\n  .list-header {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n  \n  .filter-controls {\n    width: 100%;\n  }\n  \n  .search-box input {\n    width: 100%;\n  }\n  \n  .users-table th:nth-child(4),\n  .users-table td:nth-child(4) {\n    display: none;\n  }\n}\n\n@media (max-width: 576px) {\n  .users-table th:nth-child(1),\n  .users-table td:nth-child(1),\n  .users-table th:nth-child(5),\n  .users-table td:nth-child(5) {\n    display: none;\n  }\n}\n</style>","<template>\n  <div class=\"modal-overlay\" @click=\"$emit('close')\">\n    <div class=\"user-form\" @click.stop>\n      <div class=\"form-header\">\n        <h3>{{ isCreateMode ? 'Neuen Benutzer erstellen' : 'Benutzer bearbeiten' }}</h3>\n        <button class=\"close-btn\" @click=\"$emit('close')\">\n          <i class=\"fas fa-times\"></i>\n        </button>\n      </div>\n      \n      <div v-if=\"error\" class=\"error-message\">\n        <i class=\"fas fa-exclamation-triangle\"></i>\n        {{ error }}\n      </div>\n      \n      <div class=\"form-body\">\n        <div class=\"form-group\">\n          <label for=\"email\">E-Mail-Adresse</label>\n          <input \n            type=\"email\" \n            id=\"email\" \n            v-model=\"formData.email\" \n            :disabled=\"!isCreateMode\"\n            class=\"form-control\"\n            :class=\"{ 'is-invalid': validationErrors.email }\"\n          />\n          <div v-if=\"validationErrors.email\" class=\"validation-error\">\n            {{ validationErrors.email }}\n          </div>\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"password\">Passwort</label>\n          <div class=\"password-field\">\n            <input \n              :type=\"showPassword ? 'text' : 'password'\" \n              id=\"password\" \n              v-model=\"formData.password\" \n              class=\"form-control\"\n              :class=\"{ 'is-invalid': validationErrors.password }\"\n            />\n            <button \n              type=\"button\" \n              class=\"toggle-password\" \n              @click=\"showPassword = !showPassword\"\n            >\n              <i :class=\"['fas', showPassword ? 'fa-eye-slash' : 'fa-eye']\"></i>\n            </button>\n          </div>\n          <div v-if=\"validationErrors.password\" class=\"validation-error\">\n            {{ validationErrors.password }}\n          </div>\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"role\">Rolle</label>\n          <select \n            id=\"role\" \n            v-model=\"formData.role\" \n            class=\"form-control\"\n          >\n            <option value=\"user\">Standardbenutzer</option>\n            <option value=\"admin\">Administrator</option>\n          </select>\n        </div>\n        \n        <div v-if=\"formData.role === 'admin'\" class=\"role-info\">\n          <i class=\"fas fa-info-circle\"></i>\n          Administratoren haben vollen Zugriff auf alle Systemfunktionen, einschließlich Benutzerverwaltung und Konfigurationseinstellungen.\n        </div>\n      </div>\n      \n      <div class=\"form-footer\">\n        <button \n          type=\"button\" \n          class=\"cancel-btn\" \n          @click=\"$emit('close')\"\n        >\n          Abbrechen\n        </button>\n        <button \n          type=\"button\" \n          class=\"save-btn\" \n          :disabled=\"loading || !isFormValid\" \n          @click=\"saveUser\"\n        >\n          <i v-if=\"loading\" class=\"fas fa-spinner fa-spin\"></i>\n          {{ isCreateMode ? 'Benutzer erstellen' : 'Benutzer speichern' }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch } from 'vue';\n\n// Props\nconst props = defineProps({\n  mode: {\n    type: String,\n    default: 'create',\n    validator: (value) => ['create', 'edit'].includes(value)\n  },\n  user: {\n    type: Object,\n    default: null\n  },\n  loading: {\n    type: Boolean,\n    default: false\n  },\n  error: {\n    type: String,\n    default: ''\n  }\n});\n\n// Emits\nconst emit = defineEmits(['save', 'close']);\n\n// Local state\nconst showPassword = ref(false);\nconst formData = ref({\n  email: '',\n  password: '',\n  role: 'user'\n});\nconst validationErrors = ref({\n  email: '',\n  password: ''\n});\n\n// Computed properties\nconst isCreateMode = computed(() => props.mode === 'create');\nconst isFormValid = computed(() => {\n  if (!formData.value.email) return false;\n  if (isCreateMode.value && !formData.value.password) return false;\n  return !validationErrors.value.email && !validationErrors.value.password;\n});\n\n// Methods\nconst validateEmail = () => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (!formData.value.email) {\n    validationErrors.value.email = 'E-Mail-Adresse ist erforderlich';\n    return false;\n  } else if (!emailRegex.test(formData.value.email)) {\n    validationErrors.value.email = 'Ungültige E-Mail-Adresse';\n    return false;\n  } else {\n    validationErrors.value.email = '';\n    return true;\n  }\n};\n\nconst validatePassword = () => {\n  if (isCreateMode.value && !formData.value.password) {\n    validationErrors.value.password = 'Passwort ist erforderlich';\n    return false;\n  } else if (formData.value.password && formData.value.password.length < 8) {\n    validationErrors.value.password = 'Passwort muss mindestens 8 Zeichen lang sein';\n    return false;\n  } else {\n    validationErrors.value.password = '';\n    return true;\n  }\n};\n\nconst validateForm = () => {\n  const isEmailValid = validateEmail();\n  const isPasswordValid = validatePassword();\n  return isEmailValid && isPasswordValid;\n};\n\nconst saveUser = () => {\n  if (!validateForm()) return;\n  \n  emit('save', {\n    email: formData.value.email,\n    password: formData.value.password,\n    role: formData.value.role\n  });\n};\n\n// Initialize form data if user is provided\nwatch(() => props.user, (newUser) => {\n  if (newUser) {\n    formData.value = {\n      email: newUser.email || '',\n      password: '',\n      role: newUser.role || 'user'\n    };\n  } else {\n    // Reset form if no user is provided\n    formData.value = {\n      email: '',\n      password: '',\n      role: 'user'\n    };\n  }\n}, { immediate: true });\n\n// Validate on input\nwatch(() => formData.value.email, validateEmail);\nwatch(() => formData.value.password, validatePassword);\n</script>\n\n<style scoped>\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  padding: 1rem;\n}\n\n.user-form {\n  background-color: white;\n  border-radius: 0.5rem;\n  width: 100%;\n  max-width: 500px;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n}\n\n.form-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem 1.5rem;\n  border-bottom: 1px solid #e2e8f0;\n}\n\n.form-header h3 {\n  margin: 0;\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: #1e293b;\n}\n\n.close-btn {\n  background: none;\n  border: none;\n  color: #64748b;\n  font-size: 1.25rem;\n  cursor: pointer;\n  padding: 0.25rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.close-btn:hover {\n  color: #ef4444;\n}\n\n.error-message {\n  margin: 1rem 1.5rem 0;\n  padding: 0.75rem;\n  background-color: #fee2e2;\n  border-left: 4px solid #ef4444;\n  color: #b91c1c;\n  border-radius: 0.25rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.form-body {\n  padding: 1.5rem;\n}\n\n.form-group {\n  margin-bottom: 1.25rem;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: #475569;\n  font-size: 0.875rem;\n}\n\n.form-control {\n  width: 100%;\n  padding: 0.625rem 0.75rem;\n  border: 1px solid #e2e8f0;\n  border-radius: 0.375rem;\n  font-size: 0.875rem;\n  color: #1e293b;\n  background-color: white;\n}\n\n.form-control:focus {\n  outline: none;\n  border-color: #3b82f6;\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n}\n\n.form-control.is-invalid {\n  border-color: #ef4444;\n}\n\n.password-field {\n  position: relative;\n}\n\n.toggle-password {\n  position: absolute;\n  right: 0.75rem;\n  top: 50%;\n  transform: translateY(-50%);\n  background: none;\n  border: none;\n  color: #64748b;\n  cursor: pointer;\n  padding: 0.25rem;\n}\n\n.validation-error {\n  margin-top: 0.375rem;\n  font-size: 0.75rem;\n  color: #ef4444;\n}\n\n.role-info {\n  background-color: #eff6ff;\n  padding: 0.75rem;\n  border-radius: 0.375rem;\n  font-size: 0.75rem;\n  color: #1e40af;\n  display: flex;\n  align-items: flex-start;\n  gap: 0.5rem;\n}\n\n.role-info i {\n  margin-top: 0.125rem;\n}\n\n.form-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 0.75rem;\n  padding: 1rem 1.5rem;\n  border-top: 1px solid #e2e8f0;\n}\n\n.cancel-btn, .save-btn {\n  padding: 0.625rem 1rem;\n  border-radius: 0.375rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.cancel-btn {\n  background-color: #f1f5f9;\n  color: #475569;\n  border: 1px solid #e2e8f0;\n}\n\n.cancel-btn:hover {\n  background-color: #e2e8f0;\n}\n\n.save-btn {\n  background-color: #3b82f6;\n  color: white;\n  border: none;\n}\n\n.save-btn:hover:not(:disabled) {\n  background-color: #2563eb;\n}\n\n.save-btn:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n/* Dark Mode Support */\n:global(.theme-dark) .user-form {\n  background-color: #1e1e1e;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.3), 0 2px 4px -1px rgba(0, 0, 0, 0.2);\n}\n\n:global(.theme-dark) .form-header {\n  border-bottom-color: #333;\n}\n\n:global(.theme-dark) .form-header h3 {\n  color: #e0e0e0;\n}\n\n:global(.theme-dark) .close-btn {\n  color: #aaa;\n}\n\n:global(.theme-dark) .close-btn:hover {\n  color: #ef4444;\n}\n\n:global(.theme-dark) .form-group label {\n  color: #bbb;\n}\n\n:global(.theme-dark) .form-control {\n  background-color: #252525;\n  border-color: #444;\n  color: #e0e0e0;\n}\n\n:global(.theme-dark) .form-control:focus {\n  border-color: #3b82f6;\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.2);\n}\n\n:global(.theme-dark) .toggle-password {\n  color: #aaa;\n}\n\n:global(.theme-dark) .role-info {\n  background-color: #1a365d;\n  color: #93c5fd;\n}\n\n:global(.theme-dark) .form-footer {\n  border-top-color: #333;\n}\n\n:global(.theme-dark) .cancel-btn {\n  background-color: #252525;\n  color: #bbb;\n  border-color: #444;\n}\n\n:global(.theme-dark) .cancel-btn:hover {\n  background-color: #333;\n}\n\n:global(.theme-dark) .save-btn {\n  background-color: #2563eb;\n}\n\n:global(.theme-dark) .save-btn:hover:not(:disabled) {\n  background-color: #1d4ed8;\n}\n</style>","<template>\n  <div class=\"confirm-dialog-overlay\" v-if=\"show\" @click=\"emit('cancel')\">\n    <div class=\"confirm-dialog\" @click.stop>\n      <div class=\"dialog-header\">\n        <h3>{{ title }}</h3>\n        <button class=\"close-btn\" @click=\"emit('cancel')\">\n          <i class=\"fas fa-times\"></i>\n        </button>\n      </div>\n      \n      <div class=\"dialog-body\">\n        <div class=\"dialog-icon\">\n          <i :class=\"['fas', iconClass]\"></i>\n        </div>\n        <p class=\"dialog-message\">{{ message }}</p>\n      </div>\n      \n      <div class=\"dialog-footer\">\n        <button \n          type=\"button\" \n          class=\"cancel-btn\" \n          @click=\"emit('cancel')\"\n        >\n          {{ cancelText }}\n        </button>\n        <button \n          type=\"button\" \n          :class=\"['confirm-btn', buttonClass]\" \n          @click=\"emit('confirm')\"\n        >\n          {{ confirmText }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue';\n\n// Props\nconst props = defineProps({\n  show: {\n    type: Boolean,\n    default: false\n  },\n  title: {\n    type: String,\n    default: 'Bestätigung'\n  },\n  message: {\n    type: String,\n    default: 'Möchten Sie diese Aktion wirklich durchführen?'\n  },\n  type: {\n    type: String,\n    default: 'primary',\n    validator: (value) => ['primary', 'danger', 'warning', 'info'].includes(value)\n  },\n  confirmText: {\n    type: String,\n    default: 'Bestätigen'\n  },\n  cancelText: {\n    type: String,\n    default: 'Abbrechen'\n  }\n});\n\n// Emits\nconst emit = defineEmits(['confirm', 'cancel']);\n\n// Computed properties\nconst iconClass = computed(() => {\n  switch (props.type) {\n    case 'danger':\n      return 'fa-exclamation-circle';\n    case 'warning':\n      return 'fa-exclamation-triangle';\n    case 'info':\n      return 'fa-info-circle';\n    default:\n      return 'fa-question-circle';\n  }\n});\n\nconst buttonClass = computed(() => {\n  switch (props.type) {\n    case 'danger':\n      return 'confirm-btn-danger';\n    case 'warning':\n      return 'confirm-btn-warning';\n    case 'info':\n      return 'confirm-btn-info';\n    default:\n      return 'confirm-btn-primary';\n  }\n});\n</script>\n\n<style scoped>\n.confirm-dialog-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  padding: 1rem;\n}\n\n.confirm-dialog {\n  background-color: white;\n  border-radius: 0.5rem;\n  width: 100%;\n  max-width: 400px;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n}\n\n.dialog-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem 1.5rem;\n  border-bottom: 1px solid #e2e8f0;\n}\n\n.dialog-header h3 {\n  margin: 0;\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: #1e293b;\n}\n\n.close-btn {\n  background: none;\n  border: none;\n  color: #64748b;\n  font-size: 1.25rem;\n  cursor: pointer;\n  padding: 0.25rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.close-btn:hover {\n  color: #ef4444;\n}\n\n.dialog-body {\n  padding: 1.5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n}\n\n.dialog-icon {\n  margin-bottom: 1rem;\n  font-size: 2.5rem;\n}\n\n.dialog-icon .fa-exclamation-circle {\n  color: #ef4444;\n}\n\n.dialog-icon .fa-exclamation-triangle {\n  color: #f59e0b;\n}\n\n.dialog-icon .fa-info-circle {\n  color: #3b82f6;\n}\n\n.dialog-icon .fa-question-circle {\n  color: #6366f1;\n}\n\n.dialog-message {\n  margin: 0;\n  color: #475569;\n  font-size: 1rem;\n  line-height: 1.5;\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 0.75rem;\n  padding: 1rem 1.5rem;\n  border-top: 1px solid #e2e8f0;\n}\n\n.cancel-btn, .confirm-btn {\n  padding: 0.625rem 1rem;\n  border-radius: 0.375rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n  cursor: pointer;\n}\n\n.cancel-btn {\n  background-color: #f1f5f9;\n  color: #475569;\n  border: 1px solid #e2e8f0;\n}\n\n.cancel-btn:hover {\n  background-color: #e2e8f0;\n}\n\n.confirm-btn {\n  border: none;\n  color: white;\n}\n\n.confirm-btn-primary {\n  background-color: #3b82f6;\n}\n\n.confirm-btn-primary:hover {\n  background-color: #2563eb;\n}\n\n.confirm-btn-danger {\n  background-color: #ef4444;\n}\n\n.confirm-btn-danger:hover {\n  background-color: #dc2626;\n}\n\n.confirm-btn-warning {\n  background-color: #f59e0b;\n}\n\n.confirm-btn-warning:hover {\n  background-color: #d97706;\n}\n\n.confirm-btn-info {\n  background-color: #3b82f6;\n}\n\n.confirm-btn-info:hover {\n  background-color: #2563eb;\n}\n\n/* Dark Mode Support */\n:global(.theme-dark) .confirm-dialog {\n  background-color: #1e1e1e;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.3), 0 2px 4px -1px rgba(0, 0, 0, 0.2);\n}\n\n:global(.theme-dark) .dialog-header {\n  border-bottom-color: #333;\n}\n\n:global(.theme-dark) .dialog-header h3 {\n  color: #e0e0e0;\n}\n\n:global(.theme-dark) .close-btn {\n  color: #aaa;\n}\n\n:global(.theme-dark) .close-btn:hover {\n  color: #ef4444;\n}\n\n:global(.theme-dark) .dialog-message {\n  color: #bbb;\n}\n\n:global(.theme-dark) .dialog-footer {\n  border-top-color: #333;\n}\n\n:global(.theme-dark) .cancel-btn {\n  background-color: #252525;\n  color: #bbb;\n  border-color: #444;\n}\n\n:global(.theme-dark) .cancel-btn:hover {\n  background-color: #333;\n}\n\n:global(.theme-dark) .confirm-btn-primary {\n  background-color: #2563eb;\n}\n\n:global(.theme-dark) .confirm-btn-primary:hover {\n  background-color: #1d4ed8;\n}\n\n:global(.theme-dark) .confirm-btn-danger {\n  background-color: #dc2626;\n}\n\n:global(.theme-dark) .confirm-btn-danger:hover {\n  background-color: #b91c1c;\n}\n\n:global(.theme-dark) .confirm-btn-warning {\n  background-color: #d97706;\n}\n\n:global(.theme-dark) .confirm-btn-warning:hover {\n  background-color: #b45309;\n}\n\n:global(.theme-dark) .confirm-btn-info {\n  background-color: #2563eb;\n}\n\n:global(.theme-dark) .confirm-btn-info:hover {\n  background-color: #1d4ed8;\n}\n\n/* Contrast mode */\n:global(.theme-contrast) .confirm-dialog {\n  background-color: #000;\n  border: 2px solid #ffeb3b;\n}\n\n:global(.theme-contrast) .dialog-header {\n  border-bottom-color: #ffeb3b;\n}\n\n:global(.theme-contrast) .dialog-header h3 {\n  color: #ffeb3b;\n}\n\n:global(.theme-contrast) .dialog-message {\n  color: #fff;\n}\n\n:global(.theme-contrast) .dialog-footer {\n  border-top-color: #ffeb3b;\n}\n\n:global(.theme-contrast) .confirm-btn, \n:global(.theme-contrast) .cancel-btn {\n  border: 2px solid #ffeb3b;\n  color: #000;\n  background-color: #ffeb3b;\n  font-weight: bold;\n}\n\n:global(.theme-contrast) .cancel-btn:hover,\n:global(.theme-contrast) .confirm-btn:hover {\n  background-color: #000;\n  color: #ffeb3b;\n}\n</style>","<template>\n  <div class=\"admin-sub-view users-view\">\n    <h1>{{ viewTitle }}</h1>\n    \n    <!-- User summary cards -->\n    <div class=\"user-stats\">\n      <div class=\"stat-card\">\n        <div class=\"stat-icon\">\n          <i class=\"fas fa-users\"></i>\n        </div>\n        <div class=\"stat-info\">\n          <h2>{{ userStore.userStats.total }}</h2>\n          <p>Gesamtbenutzer</p>\n        </div>\n      </div>\n      \n      <div class=\"stat-card\">\n        <div class=\"stat-icon admin-icon\">\n          <i class=\"fas fa-user-shield\"></i>\n        </div>\n        <div class=\"stat-info\">\n          <h2>{{ userStore.userStats.admins }}</h2>\n          <p>Administratoren</p>\n        </div>\n      </div>\n      \n      <div class=\"stat-card\">\n        <div class=\"stat-icon user-icon\">\n          <i class=\"fas fa-user\"></i>\n        </div>\n        <div class=\"stat-info\">\n          <h2>{{ userStore.userStats.standardUsers }}</h2>\n          <p>Standardbenutzer</p>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Error notification if there is an error in the user store -->\n    <div v-if=\"userStore.error\" class=\"error-notification\">\n      <i class=\"fas fa-exclamation-triangle\"></i>\n      <p>{{ userStore.error }}</p>\n      <button @click=\"userStore.error = null\" class=\"dismiss-btn\">\n        <i class=\"fas fa-times\"></i>\n      </button>\n    </div>\n    \n    <!-- User list component -->\n    <UserList\n      :users=\"userStore.filteredUsers\"\n      :loading=\"userStore.loading\"\n      title=\"Registrierte Benutzer\"\n      @filter-change=\"userStore.setFilter\"\n      @sort-change=\"sortUsers\"\n      @add-user=\"userStore.openUserModal('create')\"\n      @change-role=\"confirmRoleChange\"\n      @delete-user=\"confirmDeleteUser\"\n    />\n    \n    <!-- User form modal -->\n    <UserForm\n      v-if=\"userStore.showUserModal\"\n      :mode=\"userStore.modalMode\"\n      :user=\"userStore.selectedUser\"\n      :loading=\"userStore.loading\"\n      :error=\"userStore.error\"\n      @save=\"saveUser\"\n      @close=\"userStore.closeUserModal\"\n    />\n    \n    <!-- Confirmation dialog -->\n    <ConfirmDialog\n      v-if=\"userStore.confirmDialog.show\"\n      :title=\"confirmTitle\"\n      :message=\"userStore.confirmDialog.message\"\n      :type=\"confirmType\"\n      @confirm=\"userStore.confirmAction\"\n      @cancel=\"userStore.closeConfirmDialog\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { computed, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { useUserStore } from '@/stores/userStore';\nimport UserList from '@/components/admin/users/UserList.vue';\nimport UserForm from '@/components/admin/users/UserForm.vue';\nimport ConfirmDialog from '@/components/common/ConfirmDialog.vue';\n\nconst route = useRoute();\nconst userStore = useUserStore();\n\n// View title based on route\nconst viewTitle = computed(() => {\n  const viewName = route.name || '';\n  \n  switch(viewName) {\n    case 'AdminUsers':\n      return 'Benutzerverwaltung';\n    default:\n      return 'Administration';\n  }\n});\n\n// Computed properties for confirmation dialog\nconst confirmTitle = computed(() => {\n  if (userStore.confirmDialog.type === 'delete') {\n    return 'Benutzer löschen';\n  } else if (userStore.confirmDialog.type === 'role') {\n    return 'Benutzerrolle ändern';\n  }\n  return 'Bestätigung';\n});\n\nconst confirmType = computed(() => {\n  if (userStore.confirmDialog.type === 'delete') {\n    return 'danger';\n  } else if (userStore.confirmDialog.type === 'role') {\n    return 'warning';\n  }\n  return 'primary';\n});\n\n// Methods\nconst sortUsers = (sortData) => {\n  userStore.toggleSort(sortData.field);\n};\n\nconst saveUser = async (userData) => {\n  try {\n    if (userStore.modalMode === 'create') {\n      await userStore.createUser(userData);\n    } else {\n      // Implementation for editing a user would go here\n      // Not implemented in current API\n    }\n    userStore.closeUserModal();\n  } catch (error) {\n    // Error is already handled in the store\n  }\n};\n\nconst confirmDeleteUser = (userId) => {\n  userStore.openConfirmDialog('delete', { userId });\n};\n\nconst confirmRoleChange = (data) => {\n  userStore.openConfirmDialog('role', data);\n};\n\n// Load users when the component is mounted\nonMounted(() => {\n  userStore.loadUsers();\n});\n</script>\n\n<style scoped>\n.users-view {\n  padding: 1.5rem;\n}\n\n.user-stats {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 1.5rem;\n  margin-bottom: 2rem;\n}\n\n.stat-card {\n  background-color: #ffffff;\n  border-radius: 0.5rem;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  padding: 1.5rem;\n  display: flex;\n  align-items: center;\n}\n\n.stat-icon {\n  background-color: #ebf5ff;\n  color: #3b82f6;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 9999px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.25rem;\n  margin-right: 1.25rem;\n}\n\n.admin-icon {\n  background-color: #dbeafe;\n  color: #1d4ed8;\n}\n\n.user-icon {\n  background-color: #e0f2fe;\n  color: #0369a1;\n}\n\n.stat-info h2 {\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: #1e293b;\n  margin: 0 0 0.25rem 0;\n}\n\n.stat-info p {\n  font-size: 0.875rem;\n  color: #64748b;\n  margin: 0;\n}\n\n.error-notification {\n  margin-bottom: 1.5rem;\n  padding: 1rem;\n  background-color: #fee2e2;\n  border-left: 4px solid #ef4444;\n  color: #b91c1c;\n  border-radius: 0.375rem;\n  display: flex;\n  align-items: center;\n}\n\n.error-notification i {\n  margin-right: 0.75rem;\n}\n\n.error-notification p {\n  flex: 1;\n  margin: 0;\n}\n\n.dismiss-btn {\n  background: none;\n  border: none;\n  color: #b91c1c;\n  cursor: pointer;\n  padding: 0.25rem;\n  font-size: 1rem;\n}\n\n.dismiss-btn:hover {\n  color: #ef4444;\n}\n\n/* Dark Mode Support */\n:global(.theme-dark) .stat-card {\n  background-color: #1e1e1e;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\n}\n\n:global(.theme-dark) .stat-icon {\n  background-color: #1e3a8a;\n  color: #93c5fd;\n}\n\n:global(.theme-dark) .admin-icon {\n  background-color: #1e40af;\n  color: #93c5fd;\n}\n\n:global(.theme-dark) .user-icon {\n  background-color: #0369a1;\n  color: #bae6fd;\n}\n\n:global(.theme-dark) .stat-info h2 {\n  color: #e0e0e0;\n}\n\n:global(.theme-dark) .stat-info p {\n  color: #aaa;\n}\n\n:global(.theme-dark) .error-notification {\n  background-color: rgba(239, 68, 68, 0.1);\n  border-left-color: #ef4444;\n  color: #fee2e2;\n}\n\n:global(.theme-dark) .dismiss-btn {\n  color: #fee2e2;\n}\n\n:global(.theme-dark) .dismiss-btn:hover {\n  color: #fecaca;\n}\n\n/* Contrast mode */\n:global(.theme-contrast) .stat-card {\n  background-color: #000;\n  border: 2px solid #ffeb3b;\n  box-shadow: none;\n}\n\n:global(.theme-contrast) .stat-icon,\n:global(.theme-contrast) .admin-icon,\n:global(.theme-contrast) .user-icon {\n  background-color: #ffeb3b;\n  color: #000;\n}\n\n:global(.theme-contrast) .stat-info h2 {\n  color: #ffeb3b;\n}\n\n:global(.theme-contrast) .stat-info p {\n  color: #fff;\n}\n\n:global(.theme-contrast) .error-notification {\n  background-color: #000;\n  border: 2px solid #ffeb3b;\n  color: #ffeb3b;\n}\n\n:global(.theme-contrast) .dismiss-btn {\n  color: #ffeb3b;\n}\n\n/* Responsive adjustments */\n@media (max-width: 768px) {\n  .user-stats {\n    grid-template-columns: 1fr;\n  }\n}\n</style>"],"names":["useUserStore","defineStore","state","result","user","query","a","b","aValue","bValue","useAuthStore","response","axios","error","_b","_a","userData","userId","newRole","filter","field","mode","type","data","message","u","roleName","emit","__emit","activeFilter","ref","searchQuery","sortField","sortDirection","hasActiveFilters","computed","emptyStateMessage","applyFilters","resetFilters","toggleSort","formatDate","timestamp","props","__props","showPassword","formData","validationErrors","isCreateMode","isFormValid","validateEmail","emailRegex","validatePassword","validateForm","isEmailValid","isPasswordValid","saveUser","watch","newUser","iconClass","buttonClass","route","useRoute","userStore","viewTitle","confirmTitle","confirmType","sortUsers","sortData","confirmDeleteUser","confirmRoleChange","onMounted"],"mappings":"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"}